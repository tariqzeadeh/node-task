{
  "stats": {
    "suites": 63,
    "tests": 60,
    "passes": 60,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-23T09:02:01.770Z",
    "end": "2022-02-23T09:02:03.494Z",
    "duration": 1724,
    "testsRegistered": 60,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "860528b7-1c50-44b3-8c78-56ef6fcd3cb6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "41679576-a6a6-44ab-a14f-a01680370e01",
          "title": "POST /comments/new-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/addComment.spec.js",
          "file": "/tests/commentRoutes/addComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /comments/new-comment\"",
              "fullTitle": "POST /comments/new-comment \"before all\" hook in \"POST /comments/new-comment\"",
              "timedOut": false,
              "duration": 176,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "c9fd390c-ea72-4561-8c99-9019568ff138",
              "parentUUID": "41679576-a6a6-44ab-a14f-a01680370e01",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"POST /comments/new-comment\"",
              "fullTitle": "POST /comments/new-comment \"after all\" hook in \"POST /comments/new-comment\"",
              "timedOut": false,
              "duration": 53,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "71d74b13-8103-4cac-a847-59a1e0960573",
              "parentUUID": "41679576-a6a6-44ab-a14f-a01680370e01",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d597bad9-f973-4e80-815b-671b0880b7e3",
              "title": "POST /comments/new-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/addComment.spec.js",
              "file": "/tests/commentRoutes/addComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should POST (add) a new comment on the post with the givin id's",
                  "fullTitle": "POST /comments/new-comment POST /comments/new-comment should POST (add) a new comment on the post with the givin id's",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.post(\"/comments/new-comment\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome here\",\n});\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\", 1);\nres.body.should.have.property(\"userId\", secondUser.id);\nres.body.should.have.property(\"postId\", firstPost.id);\nres.body.should.have.property(\"body\", \"Hi, your welcome here\");",
                  "err": {},
                  "uuid": "3b4b64fd-1e9f-4efd-a91a-d1ca9e68a2db",
                  "parentUUID": "d597bad9-f973-4e80-815b-671b0880b7e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b4b64fd-1e9f-4efd-a91a-d1ca9e68a2db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 30,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "9d7d19b4-ba1d-46f9-90a9-c0c76be2c8e1",
              "title": "POST /comments/new-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/addComment.spec.js",
              "file": "/tests/commentRoutes/addComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a 404 code if the new comment data have missing fields",
                  "fullTitle": "POST /comments/new-comment POST /comments/new-comment should return a 404 code if the new comment data have missing fields",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.post(\"/comments/new-comment\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "7daf700b-7851-4617-b0b1-bd34259106c9",
                  "parentUUID": "9d7d19b4-ba1d-46f9-90a9-c0c76be2c8e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7daf700b-7851-4617-b0b1-bd34259106c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "b5844beb-d02a-4d0d-bc26-eedffd473783",
          "title": "GET /comments",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allComments.spec.js",
          "file": "/tests/commentRoutes/allComments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /comments\"",
              "fullTitle": "GET /comments \"before all\" hook in \"GET /comments\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hope you enjoy with us\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "14a2e29f-8a56-4ffa-b86c-29e2f9966b9a",
              "parentUUID": "b5844beb-d02a-4d0d-bc26-eedffd473783",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /comments\"",
              "fullTitle": "GET /comments \"after all\" hook in \"GET /comments\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "b7ffbfb3-a07b-41af-a94e-5b44737ba571",
              "parentUUID": "b5844beb-d02a-4d0d-bc26-eedffd473783",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f978df1f-8c6b-4808-8dc4-ae3d807a7248",
              "title": "GET /comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allComments.spec.js",
              "file": "/tests/commentRoutes/allComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET all the comments in the database",
                  "fullTitle": "GET /comments GET /comments should GET all the comments in the database",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments\");\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);",
                  "err": {},
                  "uuid": "d130ba15-50e3-49c5-87e4-84cfa745d727",
                  "parentUUID": "f978df1f-8c6b-4808-8dc4-ae3d807a7248",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d130ba15-50e3-49c5-87e4-84cfa745d727"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "e2f9f8d2-cb93-495e-98fe-c32a28e363ea",
              "title": "GET /comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allComments.spec.js",
              "file": "/tests/commentRoutes/allComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if no comments in the database",
                  "fullTitle": "GET /comments GET /comments should return 404 code if no comments in the database",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.get(\"/comments\");\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"No Comments Found\");",
                  "err": {},
                  "uuid": "35d8a869-b798-4af2-9f51-fcc5a89d84cd",
                  "parentUUID": "e2f9f8d2-cb93-495e-98fe-c32a28e363ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35d8a869-b798-4af2-9f51-fcc5a89d84cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "89ae4009-b543-4b7b-bca8-337e119bdf32",
          "title": "GET /comments/all-user-comments",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allUserComments.spec.js",
          "file": "/tests/commentRoutes/allUserComments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /comments/all-user-comments\"",
              "fullTitle": "GET /comments/all-user-comments \"before all\" hook in \"GET /comments/all-user-comments\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hope you enjoy with us\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "11d40da2-0b31-495c-8ecc-ccb44291a095",
              "parentUUID": "89ae4009-b543-4b7b-bca8-337e119bdf32",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /comments/all-user-comments\"",
              "fullTitle": "GET /comments/all-user-comments \"after all\" hook in \"GET /comments/all-user-comments\"",
              "timedOut": false,
              "duration": 47,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "4cfbb332-3469-4265-88b8-329301f5db13",
              "parentUUID": "89ae4009-b543-4b7b-bca8-337e119bdf32",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "19715f4e-9a42-4525-9467-e9f6130a9d88",
              "title": "GET /comments/all-user-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allUserComments.spec.js",
              "file": "/tests/commentRoutes/allUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET the all comments for a user with the givin userId from the database",
                  "fullTitle": "GET /comments/all-user-comments GET /comments/all-user-comments should GET the all comments for a user with the givin userId from the database",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/all-user-comments\").send({\n  userId: secondUser.id,\n});\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);\nres.body[1].should.have.property(\"id\", firstComment.id);\nres.body[1].should.have.property(\"userId\", secondUser.id);\nres.body[1].should.have.property(\"postId\", firstPost.id);\nres.body[1].should.have.property(\"body\", firstComment.body);",
                  "err": {},
                  "uuid": "00e9f694-99e8-42b5-8c57-129ccbfa8f24",
                  "parentUUID": "19715f4e-9a42-4525-9467-e9f6130a9d88",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00e9f694-99e8-42b5-8c57-129ccbfa8f24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "0fcc9de1-3d7d-4eeb-b23f-aec5994ec90c",
              "title": "GET /comments/all-user-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allUserComments.spec.js",
              "file": "/tests/commentRoutes/allUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if no user with the givin id in the database",
                  "fullTitle": "GET /comments/all-user-comments GET /comments/all-user-comments should return 404 code if no user with the givin id in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/all-user-comments\").send({\n  userId: 3,\n});\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "3b721cae-5c21-4508-80ca-31dac04686cd",
                  "parentUUID": "0fcc9de1-3d7d-4eeb-b23f-aec5994ec90c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no comments for the user in the database",
                  "fullTitle": "GET /comments/all-user-comments GET /comments/all-user-comments should return 404 code if no comments for the user in the database",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.get(\"/comments/all-user-comments\").send({\n  userId: secondUser.id,\n});\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"The user dont have comments\");",
                  "err": {},
                  "uuid": "a3ad1c3e-ae8f-439c-99dd-57b5febedf8c",
                  "parentUUID": "0fcc9de1-3d7d-4eeb-b23f-aec5994ec90c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b721cae-5c21-4508-80ca-31dac04686cd",
                "a3ad1c3e-ae8f-439c-99dd-57b5febedf8c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "f39203c4-502f-4bd9-8733-c1cf4cc7270f",
          "title": "DELETE /comments/delete-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
          "file": "/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"before all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 22,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "32e82d62-0526-4773-af39-2a0a47ebeea9",
              "parentUUID": "f39203c4-502f-4bd9-8733-c1cf4cc7270f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"after all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 44,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "f2937690-05f2-4571-88bd-051e1eb67118",
              "parentUUID": "f39203c4-502f-4bd9-8733-c1cf4cc7270f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e7c4c128-bdb1-447a-a453-6042d13563f4",
              "title": "DELETE /comments/delete-all-comments-from-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a comment with the givin id",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments-from-post should DELETE a comment with the givin id",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments-from-post\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(200);\nres.body.message.should.equal(\"All comments successfully deleted\")",
                  "err": {},
                  "uuid": "46ae16c2-2783-48fa-bfed-aa5ddb31e049",
                  "parentUUID": "e7c4c128-bdb1-447a-a453-6042d13563f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46ae16c2-2783-48fa-bfed-aa5ddb31e049"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "4f5f7092-c97d-4b3b-8fcd-bc660572beb9",
              "title": "DELETE /comments/delete-all-comments-from-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the deleted comment has missing fields",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments-from-post should return 404 code if the deleted comment has missing fields",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments-from-post\").send({\n  userId: secondUser.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");\nconst allPostComments = await commentModel.findAll({\n  where: {\n    postId: firstPost.id\n  }\n})\nallPostComments.length.should.equal(0);",
                  "err": {},
                  "uuid": "f0fda411-a0aa-420a-9966-30dbb3aada7c",
                  "parentUUID": "4f5f7092-c97d-4b3b-8fcd-bc660572beb9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the comment not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments-from-post should return 404 code if the comment not found in database",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.delete(\"/comments/delete-all-comments-from-post\").send({\n  userId: secondUser.id,\n  postId: firstPost.id\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"The user dont have comments on the specified post\");",
                  "err": {},
                  "uuid": "41f2c4b5-c81b-40b4-8883-886ffc82e791",
                  "parentUUID": "4f5f7092-c97d-4b3b-8fcd-bc660572beb9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0fda411-a0aa-420a-9966-30dbb3aada7c",
                "41f2c4b5-c81b-40b4-8883-886ffc82e791"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "4c96db60-cccb-4d19-b7cc-1a72526261ab",
          "title": "DELETE /comments/delete-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserComments.spec.js",
          "file": "/tests/commentRoutes/deleteAllUserComments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"before all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 23,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "09ef54b7-9263-460a-987b-f9e395ad0b44",
              "parentUUID": "4c96db60-cccb-4d19-b7cc-1a72526261ab",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"after all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 45,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "c605e222-c9b2-42b5-935c-5a58a3d1e07d",
              "parentUUID": "4c96db60-cccb-4d19-b7cc-1a72526261ab",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "91b3753a-388c-487a-b7a1-773329d73ab5",
              "title": "DELETE /comments/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserComments.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a comments with the givin id",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments should DELETE a comments with the givin id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments\").send({\n  userId: secondUser.id,\n});\nres.should.have.status(200);\nres.body.message.should.equal(\"All comments successfully deleted\")",
                  "err": {},
                  "uuid": "bc969a94-5459-4928-9afc-66f7123000a7",
                  "parentUUID": "91b3753a-388c-487a-b7a1-773329d73ab5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc969a94-5459-4928-9afc-66f7123000a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "569a18e5-1234-41bb-8b21-bbc609843aec",
              "title": "DELETE /comments/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserComments.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the user not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments should return 404 code if the user not found in database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments\").send({\n  userId: 3,\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "2ed1a9ee-f5c5-48c2-b401-de21a57b1aa7",
                  "parentUUID": "569a18e5-1234-41bb-8b21-bbc609843aec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the comments not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments should return 404 code if the comments not found in database",
                  "timedOut": false,
                  "duration": 45,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.delete(\"/comments/delete-all-comments\").send({\n  userId: secondUser.id,\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"The user dont have comments\");",
                  "err": {},
                  "uuid": "070d6e13-27ec-47c0-acda-19d1debc20a2",
                  "parentUUID": "569a18e5-1234-41bb-8b21-bbc609843aec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ed1a9ee-f5c5-48c2-b401-de21a57b1aa7",
                "070d6e13-27ec-47c0-acda-19d1debc20a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 48,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "1d66fae3-95fb-4525-901a-e41646fe9504",
          "title": "DELETE /comments/delete-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteComment.spec.js",
          "file": "/tests/commentRoutes/deleteComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"before all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "2d633dde-7a89-4a61-9569-2896f7fc4d3c",
              "parentUUID": "1d66fae3-95fb-4525-901a-e41646fe9504",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"after all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "6d6039b7-3b55-4c3e-948f-bf938cd70716",
              "parentUUID": "1d66fae3-95fb-4525-901a-e41646fe9504",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "390bc69e-518d-472d-af2d-7ea1d309d039",
              "title": "DELETE /comments/delete-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteComment.spec.js",
              "file": "/tests/commentRoutes/deleteComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a comment with the givin id",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-comment should DELETE a comment with the givin id",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-comment\").send({\n  id: secondComment.id,\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(200);\nres.body.message.should.equal(\"Comment successfully deleted\")",
                  "err": {},
                  "uuid": "7539fd54-1893-413e-a278-ca0f6c2d4945",
                  "parentUUID": "390bc69e-518d-472d-af2d-7ea1d309d039",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7539fd54-1893-413e-a278-ca0f6c2d4945"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "5a7b55f9-612f-4be0-9fb3-634a55db3ff5",
              "title": "DELETE /comments/delete-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteComment.spec.js",
              "file": "/tests/commentRoutes/deleteComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the deleted comment has missing fields",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-comment should return 404 code if the deleted comment has missing fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-comment\").send({\n  id: secondComment.id,\n  userId: secondUser.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "a4a5a11e-7306-4548-9ce0-a47747f00b25",
                  "parentUUID": "5a7b55f9-612f-4be0-9fb3-634a55db3ff5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the comment not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-comment should return 404 code if the comment not found in database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-comment\").send({\n  id: 3,\n  userId: secondUser.id,\n  postId: firstPost.id\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"Comment Not Found\");",
                  "err": {},
                  "uuid": "abcf702f-071f-4e2e-92b6-26694c4bace1",
                  "parentUUID": "5a7b55f9-612f-4be0-9fb3-634a55db3ff5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4a5a11e-7306-4548-9ce0-a47747f00b25",
                "abcf702f-071f-4e2e-92b6-26694c4bace1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "68a1580e-e290-416d-8496-4b37d078caf7",
          "title": "GET /comments/user-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/oneComment.spec.js",
          "file": "/tests/commentRoutes/oneComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /comments/user-comment\"",
              "fullTitle": "GET /comments/user-comment \"before all\" hook in \"GET /comments/user-comment\"",
              "timedOut": false,
              "duration": 22,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hope you enjoy with us\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "05437e20-00a2-42e4-91de-6683bf59c4df",
              "parentUUID": "68a1580e-e290-416d-8496-4b37d078caf7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /comments/user-comment\"",
              "fullTitle": "GET /comments/user-comment \"after all\" hook in \"GET /comments/user-comment\"",
              "timedOut": false,
              "duration": 45,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "da4e32ad-971e-407f-8660-b63d71a8286f",
              "parentUUID": "68a1580e-e290-416d-8496-4b37d078caf7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "935acbe4-194a-4f03-80a3-e9423e22a34a",
              "title": "GET /comments/user-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/oneComment.spec.js",
              "file": "/tests/commentRoutes/oneComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET the comments with specific  id, userId and postId from the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should GET the comments with specific  id, userId and postId from the database",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n    id: firstComment.id,\n    userId: secondUser.id,\n    postId: firstPost.id\n});\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\",firstComment.id)\nres.body.should.have.property(\"userId\",secondUser.id)\nres.body.should.have.property(\"postId\",firstPost.id)\nres.body.should.have.property(\"body\",firstComment.body)",
                  "err": {},
                  "uuid": "810b18bb-22bc-4634-b3b2-b0409e23419a",
                  "parentUUID": "935acbe4-194a-4f03-80a3-e9423e22a34a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "810b18bb-22bc-4634-b3b2-b0409e23419a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "824e8230-3133-4a2a-99ef-2a0390c79d1c",
              "title": "GET /comments/user-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/oneComment.spec.js",
              "file": "/tests/commentRoutes/oneComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if comment data has some missing fields",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if comment data has some missing fields",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n      id: firstComment.id,\n      userId: secondUser.id,\n  });\n  \n  res.should.have.status(404);\n  res.body.should.be.a(\"object\");\n  res.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "9faecb5c-7f34-44c3-80d6-957c434cbd6f",
                  "parentUUID": "824e8230-3133-4a2a-99ef-2a0390c79d1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no user with the givin id in the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if no user with the givin id in the database",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n    id: firstComment.id,\n    userId: 3,\n    postId: firstPost.id\n});\n  \nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "3df70020-a70f-41ac-b19d-1871302c7a6f",
                  "parentUUID": "824e8230-3133-4a2a-99ef-2a0390c79d1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no post with the givin id in the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if no post with the givin id in the database",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n       id: firstComment.id,\n       userId: secondUser.id,\n       postId: 3\n   });;\n  \n   res.should.have.status(404);\n   res.body.should.be.a(\"object\");\n   res.body.message.should.equal(\"Post Not Found Or Was Deleted\");",
                  "err": {},
                  "uuid": "e1d3c62a-722c-4e79-9eb4-b9e598aa6b87",
                  "parentUUID": "824e8230-3133-4a2a-99ef-2a0390c79d1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no comment for the user on the post in the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if no comment for the user on the post in the database",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.get(\"/comments/user-comment\").send({\n  id: firstComment.id,\n  userId: secondUser.id,\n  postId: firstPost.id\n    });\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"Comment Not Found\");",
                  "err": {},
                  "uuid": "6876876b-b261-4b43-9a75-d8523989195a",
                  "parentUUID": "824e8230-3133-4a2a-99ef-2a0390c79d1c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9faecb5c-7f34-44c3-80d6-957c434cbd6f",
                "3df70020-a70f-41ac-b19d-1871302c7a6f",
                "e1d3c62a-722c-4e79-9eb4-b9e598aa6b87",
                "6876876b-b261-4b43-9a75-d8523989195a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 53,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "6fcaf3a3-3e9b-43fb-8a04-0cd4c3b8b3ba",
          "title": "PUT /comments/update-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/updateComment.spec.js",
          "file": "/tests/commentRoutes/updateComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"PUT /comments/update-comment\"",
              "fullTitle": "PUT /comments/update-comment \"before all\" hook in \"PUT /comments/update-comment\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "1b370cbd-e7d2-4640-92b2-11307be35a14",
              "parentUUID": "6fcaf3a3-3e9b-43fb-8a04-0cd4c3b8b3ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"PUT /comments/update-comment\"",
              "fullTitle": "PUT /comments/update-comment \"after all\" hook in \"PUT /comments/update-comment\"",
              "timedOut": false,
              "duration": 43,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "ba50fcc3-2c9e-4f0e-8de2-6c53ff122326",
              "parentUUID": "6fcaf3a3-3e9b-43fb-8a04-0cd4c3b8b3ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3a6f089e-b2f6-4039-a02d-a4f9d070a08c",
              "title": "PUT /comments/update-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/updateComment.spec.js",
              "file": "/tests/commentRoutes/updateComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should PUT (update) a comment on the post with the givin id",
                  "fullTitle": "PUT /comments/update-comment PUT /comments/update-comment should PUT (update) a comment on the post with the givin id",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/comments/update-comment\").send({\n  id: firstComment.id,\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome here\",\n});",
                  "err": {},
                  "uuid": "866a1e88-dea1-4ef5-8955-8608441285d5",
                  "parentUUID": "3a6f089e-b2f6-4039-a02d-a4f9d070a08c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "866a1e88-dea1-4ef5-8955-8608441285d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "b8b62f24-5337-4f45-947a-b8be1e9df0ed",
              "title": "PUT /comments/update-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/updateComment.spec.js",
              "file": "/tests/commentRoutes/updateComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a 404 code if the updated comment data have missing fields",
                  "fullTitle": "PUT /comments/update-comment PUT /comments/update-comment should return a 404 code if the updated comment data have missing fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/comments/update-comment\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "252fa02c-335e-4d55-b300-5b4cb826b27b",
                  "parentUUID": "b8b62f24-5337-4f45-947a-b8be1e9df0ed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a 404 code if no comment with the givin id",
                  "fullTitle": "PUT /comments/update-comment PUT /comments/update-comment should return a 404 code if no comment with the givin id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/comments/update-comment\").send({\n  id: 2,\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"hi , how are you\",\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Comment Not Found\");",
                  "err": {},
                  "uuid": "0c9d8da5-193f-4b31-bb35-0712883a63ec",
                  "parentUUID": "b8b62f24-5337-4f45-947a-b8be1e9df0ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "252fa02c-335e-4d55-b300-5b4cb826b27b",
                "0c9d8da5-193f-4b31-bb35-0712883a63ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "fc134b93-1c82-4e5f-a29f-11decaf673f3",
          "title": "POST /users/new-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/addPost.spec.js",
          "file": "/tests/postRoutes/addPost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users/new-post\"",
              "fullTitle": "POST /users/new-post \"before all\" hook in \"POST /users/new-post\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "a30a0d88-c67d-46f0-8303-df75a89ea92c",
              "parentUUID": "fc134b93-1c82-4e5f-a29f-11decaf673f3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"POST /users/new-post\"",
              "fullTitle": "POST /users/new-post \"after all\" hook in \"POST /users/new-post\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "e4baacb8-c9c6-4e91-9d0b-28c932f4fe03",
              "parentUUID": "fc134b93-1c82-4e5f-a29f-11decaf673f3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ac21d224-ac2b-48fa-bc39-5e37859918dd",
              "title": "POST /posts/new-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/addPost.spec.js",
              "file": "/tests/postRoutes/addPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should POST (add) a new post in database",
                  "fullTitle": "POST /users/new-post POST /posts/new-post should POST (add) a new post in database",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .post(\"/posts/new-post\")\n  .send({ userId: user.id, body: \"Hi\" });\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\", 1);\nres.body.should.have.property(\"userId\", user.id);\nres.body.should.have.property(\"body\", \"Hi\");",
                  "err": {},
                  "uuid": "c14b8e9b-5903-4cfe-9f97-c1618c95e5c9",
                  "parentUUID": "ac21d224-ac2b-48fa-bc39-5e37859918dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c14b8e9b-5903-4cfe-9f97-c1618c95e5c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "4e9b08db-81db-4ab5-9068-601e6d923f50",
              "title": "POST /posts/new-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/addPost.spec.js",
              "file": "/tests/postRoutes/addPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if new post data has some missing fields (body)",
                  "fullTitle": "POST /users/new-post POST /posts/new-post should return 404 code if new post data has some missing fields (body)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .post(\"/posts/new-post\")\n  .send({ userId: user.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "25b495fd-7016-4007-94fb-7e84e9c21357",
                  "parentUUID": "4e9b08db-81db-4ab5-9068-601e6d923f50",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user id is not found in the database",
                  "fullTitle": "POST /users/new-post POST /posts/new-post should return 404 code if the user id is not found in the database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .post(\"/posts/new-post\")\n  .send({ userId: 2, body: \"hallo\" });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "3db47c05-92cc-4772-ae4e-6bb2df20367b",
                  "parentUUID": "4e9b08db-81db-4ab5-9068-601e6d923f50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25b495fd-7016-4007-94fb-7e84e9c21357",
                "3db47c05-92cc-4772-ae4e-6bb2df20367b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "a2cb78d8-07b3-4b83-a0b8-149107ccefc3",
          "title": "GET /users",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allPosts.spec.js",
          "file": "/tests/postRoutes/allPosts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"before all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n    userId: user.id,\n    body: 'Hi, Im new here'\n});\nsecondPost = await postModel.create({\n    userId: user.id,\n    body: 'Hallo all'\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "3294ede1-c534-4839-bff9-a9f4ee845171",
              "parentUUID": "a2cb78d8-07b3-4b83-a0b8-149107ccefc3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"after all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "fb4fe450-5b1b-4182-90cd-9611575f4d76",
              "parentUUID": "a2cb78d8-07b3-4b83-a0b8-149107ccefc3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "42033d14-e9ab-4add-a9f1-fc57b1f1f8f9",
              "title": "GET /posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allPosts.spec.js",
              "file": "/tests/postRoutes/allPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET all posts in database",
                  "fullTitle": "GET /users GET /posts should GET all posts in database",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/posts');\nres.should.have.status(200);\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);\nres.body[1].should.be.a(\"object\");\nres.body[1].userId.should.equal(user.id);\nres.body[1].id.should.equal(1);\nres.body[1].body.should.equal(firstPost.body);",
                  "err": {},
                  "uuid": "724907ff-4571-4255-859d-544627e01b64",
                  "parentUUID": "42033d14-e9ab-4add-a9f1-fc57b1f1f8f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "724907ff-4571-4255-859d-544627e01b64"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "767a1995-66c8-4c4d-986a-7cecb1fca4b2",
              "title": "GET /posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allPosts.spec.js",
              "file": "/tests/postRoutes/allPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET posts in database (wrong url)",
                  "fullTitle": "GET /users GET /posts should NOT GET posts in database (wrong url)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/post');\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "e3378dc5-fc56-451f-bd37-efd78e04fb1b",
                  "parentUUID": "767a1995-66c8-4c4d-986a-7cecb1fca4b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3378dc5-fc56-451f-bd37-efd78e04fb1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "0f609089-8e5f-41f9-8e65-56ea20e703c5",
          "title": "GET /users/all-user-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allUserPosts.spec.js",
          "file": "/tests/postRoutes/allUserPosts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users/all-user-post\"",
              "fullTitle": "GET /users/all-user-post \"before all\" hook in \"GET /users/all-user-post\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "c4eeb182-da55-4543-a0a6-3238935e0c56",
              "parentUUID": "0f609089-8e5f-41f9-8e65-56ea20e703c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users/all-user-post\"",
              "fullTitle": "GET /users/all-user-post \"after all\" hook in \"GET /users/all-user-post\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "cdf7c890-9733-40cb-bd70-9a83801b5c4d",
              "parentUUID": "0f609089-8e5f-41f9-8e65-56ea20e703c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f14d9ab9-10de-42e0-884a-51bc8406d2ce",
              "title": "GET /posts/all-user-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allUserPosts.spec.js",
              "file": "/tests/postRoutes/allUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET a post with the id (1) in database",
                  "fullTitle": "GET /users/all-user-post GET /posts/all-user-post should GET a post with the id (1) in database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .get(\"/posts/all-user-post\")\n  .send({ userId: 1 });\nres.should.have.status(200);\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);\nres.body[1].userId.should.equal(user.id);\nres.body[1].id.should.equal(1);\nres.body[1].body.should.equal(firstPost.body);",
                  "err": {},
                  "uuid": "1d71556a-817a-4a8b-80ab-460b05883946",
                  "parentUUID": "f14d9ab9-10de-42e0-884a-51bc8406d2ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d71556a-817a-4a8b-80ab-460b05883946"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "072e4453-49a2-42e5-8943-6b362c4ff10f",
              "title": "GET /posts/all-user-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allUserPosts.spec.js",
              "file": "/tests/postRoutes/allUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code with user id is not found in the database",
                  "fullTitle": "GET /users/all-user-post GET /posts/all-user-post should return 404 code with user id is not found in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .get(\"/posts/all-user-post\")\n  .send({ userId: 2 });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "2e0c9c9d-075d-499f-82f4-ca64119a972d",
                  "parentUUID": "072e4453-49a2-42e5-8943-6b362c4ff10f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user do not have posts",
                  "fullTitle": "GET /users/all-user-post GET /posts/all-user-post should return 404 code if the user do not have posts",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(postModel);\n\n      const res = await requester\n.get(\"/posts/all-user-post\")\n.send({ id: 3, userId: 1 });\n\n      res.should.have.status(404);\n      res.body.message.should.equal(\"The user dont have posts\");",
                  "err": {},
                  "uuid": "80b2bae3-ede2-4b17-9bc9-6e133d652fd7",
                  "parentUUID": "072e4453-49a2-42e5-8943-6b362c4ff10f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e0c9c9d-075d-499f-82f4-ca64119a972d",
                "80b2bae3-ede2-4b17-9bc9-6e133d652fd7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "9b2bb205-8647-4952-bab8-0ba5d3a2913f",
          "title": "DELETE /posts/delete-all-posts",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteCommentsFromPost.spec.js",
          "file": "/tests/postRoutes/deleteCommentsFromPost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 20,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"How are you?\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "1fa4045a-0dc0-49f7-bd76-f8c03df7d138",
              "parentUUID": "9b2bb205-8647-4952-bab8-0ba5d3a2913f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 45,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "0c657e2f-0cd0-4f79-b1a2-ebb4b5d4f475",
              "parentUUID": "9b2bb205-8647-4952-bab8-0ba5d3a2913f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7f6e46a3-ea6b-44ef-a41d-a9c13ce6f347",
              "title": "DELETE /posts/post/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "file": "/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE all the comments on the post of id (1)",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/post/delete-all-comments should DELETE all the comments on the post of id (1)",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .delete(\"/posts/post/delete-all-comments\")\n  .send({ postId: firstPost.id });\nres.should.have.status(200);\nres.body.message.should.equal(\n  \"All comments on the post are successfully deleted\"\n);",
                  "err": {},
                  "uuid": "dd6d8121-8b76-4d5a-a7bd-0acbaff7dbe1",
                  "parentUUID": "7f6e46a3-ea6b-44ef-a41d-a9c13ce6f347",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd6d8121-8b76-4d5a-a7bd-0acbaff7dbe1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "da496827-b3cc-46ee-8188-c826b36a554c",
              "title": "DELETE /posts/post/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "file": "/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the user do not have the post with id (2)",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/post/delete-all-comments should return 404 code if the user do not have the post with id (2)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/post/delete-all-comments\")\n        .send({ postId: 2 });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "8850d2d1-fc74-4531-9f51-9467a971f9cd",
                  "parentUUID": "da496827-b3cc-46ee-8188-c826b36a554c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if there is no comments on the post",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/post/delete-all-comments should return 404 code if there is no comments on the post",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester\n  .delete(\"/posts/post/delete-all-comments\")\n  .send({ postId: firstPost.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"No comments found on this post\");",
                  "err": {},
                  "uuid": "b4471bf2-40f5-49b6-a1e7-f324dd115e21",
                  "parentUUID": "da496827-b3cc-46ee-8188-c826b36a554c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8850d2d1-fc74-4531-9f51-9467a971f9cd",
                "b4471bf2-40f5-49b6-a1e7-f324dd115e21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 24,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "338cac3a-e93a-45d4-8584-5ce063fded2d",
          "title": "DELETE /posts/delete-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deletePost.spec.js",
          "file": "/tests/postRoutes/deletePost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /posts/delete-post\"",
              "fullTitle": "DELETE /posts/delete-post \"before all\" hook in \"DELETE /posts/delete-post\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi all\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo...\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "57712f22-90b2-48d8-a2a7-b2166966d663",
              "parentUUID": "338cac3a-e93a-45d4-8584-5ce063fded2d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /posts/delete-post\"",
              "fullTitle": "DELETE /posts/delete-post \"after all\" hook in \"DELETE /posts/delete-post\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "9382c909-e449-40cb-abd8-164357ab8296",
              "parentUUID": "338cac3a-e93a-45d4-8584-5ce063fded2d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "20b946be-ce71-4533-9190-18df3b468171",
              "title": "DELETE /posts/delete-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deletePost.spec.js",
              "file": "/tests/postRoutes/deletePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a post for the id (2) and userId (1)",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should DELETE a post for the id (2) and userId (1)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n.delete(\"/posts/delete-post\")\n.send({ id: secondPost.id, userId: user.id });\n\n      res.should.have.status(200);\n      res.body.message.should.equal(\"Post successfully deleted\");",
                  "err": {},
                  "uuid": "f97a32e6-d55f-45a2-924c-759b9509d10a",
                  "parentUUID": "20b946be-ce71-4533-9190-18df3b468171",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f97a32e6-d55f-45a2-924c-759b9509d10a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "9652135d-5bc2-4ed9-8db9-8ce25d3b7f59",
              "title": "DELETE /posts/delete-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deletePost.spec.js",
              "file": "/tests/postRoutes/deletePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the post is not found in the database",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should return 404 code if the post is not found in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/delete-post\")\n        .send({ id: 3, userId: user.id });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "f07dbe88-19dd-4f88-ad7c-d438856f440c",
                  "parentUUID": "9652135d-5bc2-4ed9-8db9-8ce25d3b7f59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user is not found in the database",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should return 404 code if the user is not found in the database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/delete-post\")\n        .send({ id: secondPost.id, userId: 2 });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "c56ad9f9-1c97-4a5d-b3f9-c21866b03fb9",
                  "parentUUID": "9652135d-5bc2-4ed9-8db9-8ce25d3b7f59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if post data that will be deleted is missing some fields",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should return 404 code if post data that will be deleted is missing some fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/delete-post\")\n        .send({ id: secondPost.id });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "de16f9bf-478d-4dbc-bc4e-9a90c62efce3",
                  "parentUUID": "9652135d-5bc2-4ed9-8db9-8ce25d3b7f59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f07dbe88-19dd-4f88-ad7c-d438856f440c",
                "c56ad9f9-1c97-4a5d-b3f9-c21866b03fb9",
                "de16f9bf-478d-4dbc-bc4e-9a90c62efce3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "03b5886a-6dc5-475c-b55d-235a7d79be44",
          "title": "DELETE /posts/delete-all-posts",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteUserPosts.spec.js",
          "file": "/tests/postRoutes/deleteUserPosts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi all\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo...\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "91b13c80-a390-4995-abfc-db7f95f30259",
              "parentUUID": "03b5886a-6dc5-475c-b55d-235a7d79be44",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "5fc4de5f-653d-4c11-9bb8-ec9573647d64",
              "parentUUID": "03b5886a-6dc5-475c-b55d-235a7d79be44",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0131d28b-d102-4e95-bc73-a1f691ad01b7",
              "title": "DELETE /posts/delete-all-posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteUserPosts.spec.js",
              "file": "/tests/postRoutes/deleteUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE all posts for userId (1)",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/delete-all-posts should DELETE all posts for userId (1)",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .delete(\"/posts/delete-all-posts\")\n  .send({ userId: user.id });\nres.should.have.status(200);\nres.body.message.should.equal(\"All posts successfully deleted\");",
                  "err": {},
                  "uuid": "c09593e7-6c18-4190-8b3d-c2baf53c9efd",
                  "parentUUID": "0131d28b-d102-4e95-bc73-a1f691ad01b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c09593e7-6c18-4190-8b3d-c2baf53c9efd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "294fcda9-abc2-4766-8210-0d374277fb56",
              "title": "DELETE /posts/delete-all-posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteUserPosts.spec.js",
              "file": "/tests/postRoutes/deleteUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the user is not found in the database",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/delete-all-posts should return 404 code if the user is not found in the database",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .delete(\"/posts/delete-all-posts\")\n  .send({ userId: 2 });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "3b67fba8-a4fb-420d-841b-361695a6dfac",
                  "parentUUID": "294fcda9-abc2-4766-8210-0d374277fb56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user do not have posts",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/delete-all-posts should return 404 code if the user do not have posts",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(postModel);\nconst res = await requester\n  .delete(\"/posts/delete-all-posts\")\n  .send({ userId: user.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"The User Dont Have Any Post Yet\");",
                  "err": {},
                  "uuid": "a25c2494-05d1-4db3-a664-56c4651e1dc2",
                  "parentUUID": "294fcda9-abc2-4766-8210-0d374277fb56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b67fba8-a4fb-420d-841b-361695a6dfac",
                "a25c2494-05d1-4db3-a664-56c4651e1dc2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 77,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "f6c4a16e-a40b-47c9-946f-f9ef64340d30",
          "title": "GET /users/post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/onePost.spec.js",
          "file": "/tests/postRoutes/onePost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users/post\"",
              "fullTitle": "GET /users/post \"before all\" hook in \"GET /users/post\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "24b4af2d-584f-4787-b8e8-b99974008bc0",
              "parentUUID": "f6c4a16e-a40b-47c9-946f-f9ef64340d30",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users/post\"",
              "fullTitle": "GET /users/post \"after all\" hook in \"GET /users/post\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "33b1541f-f759-4f39-9103-ef50bd781708",
              "parentUUID": "f6c4a16e-a40b-47c9-946f-f9ef64340d30",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f40a1f7d-305e-4e67-af80-93627d2f14dc",
              "title": "GET /posts/post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/onePost.spec.js",
              "file": "/tests/postRoutes/onePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET a post with the id (1) in database",
                  "fullTitle": "GET /users/post GET /posts/post should GET a post with the id (1) in database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ id: 1, userId: 1 });\nres.should.have.status(200);\nres.body.should.be.a(\"object\");\nres.body.userId.should.equal(user.id);\nres.body.id.should.equal(1);\nres.body.body.should.equal(firstPost.body);",
                  "err": {},
                  "uuid": "2dc0fe73-e425-43b9-9dcd-82d6a18c7f45",
                  "parentUUID": "f40a1f7d-305e-4e67-af80-93627d2f14dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dc0fe73-e425-43b9-9dcd-82d6a18c7f45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "e5be480f-3d1c-4707-8b80-97bc81238428",
              "title": "GET /posts/post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/onePost.spec.js",
              "file": "/tests/postRoutes/onePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code with post id is not found in the database",
                  "fullTitle": "GET /users/post GET /posts/post should return 404 code with post id is not found in the database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ id: 3, userId: 1 });\nres.should.have.status(404);\nres.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "cbe1e57b-61a8-46d4-a991-1b6ad9de513b",
                  "parentUUID": "e5be480f-3d1c-4707-8b80-97bc81238428",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code with user id is not found in the database",
                  "fullTitle": "GET /users/post GET /posts/post should return 404 code with user id is not found in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ id: 1, userId: 2 });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "347eb3f4-d750-4d20-8777-079298c8ebc1",
                  "parentUUID": "e5be480f-3d1c-4707-8b80-97bc81238428",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code with user id is not found in the database",
                  "fullTitle": "GET /users/post GET /posts/post should return 404 code with user id is not found in the database",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ userId: 1 });\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "4807ac31-a64e-4007-9c6f-a3ddcbbb5156",
                  "parentUUID": "e5be480f-3d1c-4707-8b80-97bc81238428",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbe1e57b-61a8-46d4-a991-1b6ad9de513b",
                "347eb3f4-d750-4d20-8777-079298c8ebc1",
                "4807ac31-a64e-4007-9c6f-a3ddcbbb5156"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "9be0fca4-fbd5-4a4c-9c86-34a05007a57f",
          "title": "PUT /users/update-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/updatePost.spec.js",
          "file": "/tests/postRoutes/updatePost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"PUT /users/update-post\"",
              "fullTitle": "PUT /users/update-post \"before all\" hook in \"PUT /users/update-post\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\npost = await postModel.create({\n  userId: user.id,\n  body: \"Hi all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "1f0f962c-b513-49bf-8663-dbfcc36b55c5",
              "parentUUID": "9be0fca4-fbd5-4a4c-9c86-34a05007a57f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"PUT /users/update-post\"",
              "fullTitle": "PUT /users/update-post \"after all\" hook in \"PUT /users/update-post\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "d9f4ccba-d57e-4b7d-9d9f-a7e5b75c7d3f",
              "parentUUID": "9be0fca4-fbd5-4a4c-9c86-34a05007a57f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0c2834aa-2f81-48f7-8fd7-d9ad7cabf1dd",
              "title": "PUT /posts/update-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/updatePost.spec.js",
              "file": "/tests/postRoutes/updatePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should PUT (update) a post in database",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should PUT (update) a post in database",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: 1, userId: user.id, body: \"Hi all,i'm new here\" });\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\", post.id);\nres.body.should.have.property(\"userId\", user.id);\nres.body.should.have.property(\"body\", \"Hi all,i'm new here\");",
                  "err": {},
                  "uuid": "08f98a91-1aef-4576-9f03-734d0d079af7",
                  "parentUUID": "0c2834aa-2f81-48f7-8fd7-d9ad7cabf1dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08f98a91-1aef-4576-9f03-734d0d079af7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "ec43115b-16d5-43cb-86be-8a051d30d4df",
              "title": "PUT /posts/update-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/updatePost.spec.js",
              "file": "/tests/postRoutes/updatePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if updated post data has some missing fields (body)",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should return 404 code if updated post data has some missing fields (body)",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: post.id, userId: user.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "8b8c3d97-f691-42b0-95ed-ae049016829c",
                  "parentUUID": "ec43115b-16d5-43cb-86be-8a051d30d4df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user id is not found in the database",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should return 404 code if the user id is not found in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: post.id, userId: 2, body: \"Hi all, i'm new here\" });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "b82f4097-3fbd-409a-9bab-271e86fdef3c",
                  "parentUUID": "ec43115b-16d5-43cb-86be-8a051d30d4df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the post id is not found in the database",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should return 404 code if the post id is not found in the database",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: 2, userId: user.id, body: \"Hi all,i'm new here\" });\nres.should.have.status(404);\nres.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "284fea7d-be60-4586-af08-c858760fa6d9",
                  "parentUUID": "ec43115b-16d5-43cb-86be-8a051d30d4df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b8c3d97-f691-42b0-95ed-ae049016829c",
                "b82f4097-3fbd-409a-9bab-271e86fdef3c",
                "284fea7d-be60-4586-af08-c858760fa6d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "a5cc6cf7-d95a-4534-89b1-aa109d4e62c3",
          "title": "POST /users/new-user",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/addUser.spec.js",
          "file": "/tests/userRoutes/addUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users/new-user\"",
              "fullTitle": "POST /users/new-user \"before all\" hook in \"POST /users/new-user\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "ed54002b-593d-4309-811e-859a598dd01e",
              "parentUUID": "a5cc6cf7-d95a-4534-89b1-aa109d4e62c3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"POST /users/new-user\"",
              "fullTitle": "POST /users/new-user \"after all\" hook in \"POST /users/new-user\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "dac40333-e41a-4914-bd2f-33e10439993d",
              "parentUUID": "a5cc6cf7-d95a-4534-89b1-aa109d4e62c3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "be6bc84c-14d4-422a-b610-11f0a9d37dce",
              "title": "POST /users/new-user",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/addUser.spec.js",
              "file": "/tests/userRoutes/addUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update the first name and last name for a user with the id of (1)",
                  "fullTitle": "POST /users/new-user POST /users/new-user should update the first name and last name for a user with the id of (1)",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newUser = {\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n};\nconst res = await requester.post(\"/users/new-user\").send(newUser);\n_730‍.g.console.log(res.body);\nres.should.have.status(200);\nres.body.should.be.an(\"object\");\nres.body.should.have.property(\"id\", 1);\nres.body.should.have.property(\"firstName\", newUser.firstName);\nres.body.should.have.property(\"lastName\", newUser.lastName);\nres.body.should.have.property(\"email\", newUser.email);\nres.body.should.have.property(\"role\", newUser.role);",
                  "err": {},
                  "uuid": "345a75bc-f857-4f8a-990b-07ffb0d67239",
                  "parentUUID": "be6bc84c-14d4-422a-b610-11f0a9d37dce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "345a75bc-f857-4f8a-990b-07ffb0d67239"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "4d882cd7-8a2b-4321-b73c-be97fc20573d",
              "title": "POST /users/new-user",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/addUser.spec.js",
              "file": "/tests/userRoutes/addUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT ADD any user (missing fields in new user data)",
                  "fullTitle": "POST /users/new-user POST /users/new-user should NOT ADD any user (missing fields in new user data)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newUser = {\n   \n  };\n      const res = await requester.post(\"/users/new-user\").send(newUser);\n      res.should.have.status(404);",
                  "err": {},
                  "uuid": "6125f840-03ff-4972-b8c7-1c353be2c8db",
                  "parentUUID": "4d882cd7-8a2b-4321-b73c-be97fc20573d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6125f840-03ff-4972-b8c7-1c353be2c8db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "6371b4cc-d079-4c66-a7f8-28e6ad091b7d",
          "title": "GET /users",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/allUsers.spec.js",
          "file": "/tests/userRoutes/allUsers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"before all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Hasan\",\n  lastName: \"Zeadeh\",\n  email: \"Hasan@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "77399258-70c7-4498-bd9e-84ed9798bad0",
              "parentUUID": "6371b4cc-d079-4c66-a7f8-28e6ad091b7d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"after all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "82023938-ae45-4f96-a314-16b8a85f0d59",
              "parentUUID": "6371b4cc-d079-4c66-a7f8-28e6ad091b7d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9443f536-d415-4221-9a59-fcac7582aede",
              "title": "GET /users",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/allUsers.spec.js",
              "file": "/tests/userRoutes/allUsers.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET all users",
                  "fullTitle": "GET /users GET /users should GET all users",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/users');\nres.should.have.status(200);\nres.body.should.be.an('array');\nres.body.length.should.equal(2);",
                  "err": {},
                  "uuid": "854a4834-9fc0-4834-817c-eca2cadb2a95",
                  "parentUUID": "9443f536-d415-4221-9a59-fcac7582aede",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "854a4834-9fc0-4834-817c-eca2cadb2a95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "835561ad-1070-44db-b633-bb71266f2602",
              "title": "GET /users",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/allUsers.spec.js",
              "file": "/tests/userRoutes/allUsers.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET any user (wrong url)",
                  "fullTitle": "GET /users GET /users should NOT GET any user (wrong url)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/user');\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "de292634-8185-44bb-b5fa-453364733868",
                  "parentUUID": "835561ad-1070-44db-b633-bb71266f2602",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de292634-8185-44bb-b5fa-453364733868"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "258a8170-b980-4b41-8a67-01119a258c47",
          "title": "DELETE /users/delete-user/:id",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/deleteUser.spec.js",
          "file": "/tests/userRoutes/deleteUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /users/delete-user/:id\"",
              "fullTitle": "DELETE /users/delete-user/:id \"before all\" hook in \"DELETE /users/delete-user/:id\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Hasan\",\n  lastName: \"Zeadeh\",\n  email: \"Hasan@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "b35a6922-6922-4b41-a9ff-df0bc2f642e6",
              "parentUUID": "258a8170-b980-4b41-8a67-01119a258c47",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /users/delete-user/:id\"",
              "fullTitle": "DELETE /users/delete-user/:id \"after all\" hook in \"DELETE /users/delete-user/:id\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "5ad190bc-3901-46ca-a5b1-6ad6150a8e73",
              "parentUUID": "258a8170-b980-4b41-8a67-01119a258c47",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "86d8e7bc-8b4e-4b99-9f7c-89a60513869b",
              "title": "DELETE /users/delete-user/1",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/deleteUser.spec.js",
              "file": "/tests/userRoutes/deleteUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a user with id (1)",
                  "fullTitle": "DELETE /users/delete-user/:id DELETE /users/delete-user/1 should DELETE a user with id (1)",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete('/users/delete-user/1');\nres.should.have.status(200);\nres.body.should.be.an('object');\nres.body.should.have.property(\"message\",\"User has been successfully deleted\")",
                  "err": {},
                  "uuid": "fe78b06b-18b7-4ca2-ab66-699eac3c71af",
                  "parentUUID": "86d8e7bc-8b4e-4b99-9f7c-89a60513869b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe78b06b-18b7-4ca2-ab66-699eac3c71af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "c5a5b4af-bfce-4fe6-8399-61ba54e894ad",
              "title": "DELETE /users",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/deleteUser.spec.js",
              "file": "/tests/userRoutes/deleteUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT DELETE any user (no such user in database)",
                  "fullTitle": "DELETE /users/delete-user/:id DELETE /users should NOT DELETE any user (no such user in database)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete('/users/delete-user/3');;\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "8af44222-ef2b-4f1c-8f77-56405dcf6788",
                  "parentUUID": "c5a5b4af-bfce-4fe6-8399-61ba54e894ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8af44222-ef2b-4f1c-8f77-56405dcf6788"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "d9dddcfc-5f6e-4216-8b19-29b658bb50c0",
          "title": "GET /users/user/:id",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/oneUser.spec.js",
          "file": "/tests/userRoutes/oneUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users/user/:id\"",
              "fullTitle": "GET /users/user/:id \"before all\" hook in \"GET /users/user/:id\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Hasan\",\n  lastName: \"Zeadeh\",\n  email: \"Hasan@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "fbdee1e3-c694-43df-979c-f22f141b6b33",
              "parentUUID": "d9dddcfc-5f6e-4216-8b19-29b658bb50c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users/user/:id\"",
              "fullTitle": "GET /users/user/:id \"after all\" hook in \"GET /users/user/:id\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "7895c335-8e51-4ba8-9c03-e2e4c347bf02",
              "parentUUID": "d9dddcfc-5f6e-4216-8b19-29b658bb50c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ff029d2c-a38e-4f7d-b81f-a0fcc08a6917",
              "title": "GET /users/user/1",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/oneUser.spec.js",
              "file": "/tests/userRoutes/oneUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a user with the id of (1) from database",
                  "fullTitle": "GET /users/user/:id GET /users/user/1 should get a user with the id of (1) from database",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/users/user/1');\n_2b6‍.g.console.log(res.body)\nres.should.have.status(200);\nres.body.should.be.an('object');\nres.body.should.have.property(\"id\", firstUser.id);    \nres.body.should.have.property('firstName', firstUser.firstName);    \nres.body.should.have.property('lastName', firstUser.lastName);    \nres.body.should.have.property('email', firstUser.email);    \nres.body.should.have.property('role', firstUser.role);",
                  "err": {},
                  "uuid": "84da2f0e-6571-4a77-bb5a-8a6bbe4a437b",
                  "parentUUID": "ff029d2c-a38e-4f7d-b81f-a0fcc08a6917",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84da2f0e-6571-4a77-bb5a-8a6bbe4a437b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "d55b7d88-d1a5-40dd-bee8-f1f83e8eb931",
              "title": "GET /users/user/3",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/oneUser.spec.js",
              "file": "/tests/userRoutes/oneUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET any user (there no such user in database)",
                  "fullTitle": "GET /users/user/:id GET /users/user/3 should NOT GET any user (there no such user in database)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/users/user/3');\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "0416e0de-ed5e-4340-a9c9-fcae8fad66a5",
                  "parentUUID": "d55b7d88-d1a5-40dd-bee8-f1f83e8eb931",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0416e0de-ed5e-4340-a9c9-fcae8fad66a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "bb4e78b9-11a6-45c6-85f3-c1a161df6937",
          "title": "PUT /users/update-user/:id",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/updateUser.spec.js",
          "file": "/tests/userRoutes/updateUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"PUT /users/update-user/:id\"",
              "fullTitle": "PUT /users/update-user/:id \"before all\" hook in \"PUT /users/update-user/:id\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "ea292de2-a5af-494c-97f1-daf720ee6653",
              "parentUUID": "bb4e78b9-11a6-45c6-85f3-c1a161df6937",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"PUT /users/update-user/:id\"",
              "fullTitle": "PUT /users/update-user/:id \"after all\" hook in \"PUT /users/update-user/:id\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "b9f4261f-4948-40f6-b56a-e420bbcd51b5",
              "parentUUID": "bb4e78b9-11a6-45c6-85f3-c1a161df6937",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "50c8905f-b31c-424f-a586-739121858b26",
              "title": "PUT /users/update-user/1",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/updateUser.spec.js",
              "file": "/tests/userRoutes/updateUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update the first name and last name for a user with the id of (1)",
                  "fullTitle": "PUT /users/update-user/:id PUT /users/update-user/1 should update the first name and last name for a user with the id of (1)",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const updatedData = {\n  firstName: \"Tariq\",\n  lastName: \"Hawamdeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n};\nconst res = await requester.put(\"/users/update-user/1\").send(updatedData);\n_b5f‍.g.console.log(res.body);\nres.should.have.status(200);\nres.body.should.be.an(\"object\");\nres.body.should.have.property(\"id\", firstUser.id);\nres.body.should.have.property(\"firstName\", updatedData.firstName);\nres.body.should.have.property(\"lastName\", updatedData.lastName);\nres.body.should.have.property(\"email\", updatedData.email);\nres.body.should.have.property(\"role\", updatedData.role);",
                  "err": {},
                  "uuid": "767d1c17-161b-46e0-ba3c-71522aceae7b",
                  "parentUUID": "50c8905f-b31c-424f-a586-739121858b26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "767d1c17-161b-46e0-ba3c-71522aceae7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "4b33fc89-4f86-4b9d-a725-2402698f85f9",
              "title": "PUT /update-user/2",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/updateUser.spec.js",
              "file": "/tests/userRoutes/updateUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET any user (there no such user in database)",
                  "fullTitle": "PUT /users/update-user/:id PUT /update-user/2 should NOT GET any user (there no such user in database)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/users/update-user/2\");\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "d5506e24-a817-42b9-b194-6c8ddc13f300",
                  "parentUUID": "4b33fc89-4f86-4b9d-a725-2402698f85f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5506e24-a817-42b9-b194-6c8ddc13f300"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}
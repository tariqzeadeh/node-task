{
  "stats": {
    "suites": 63,
    "tests": 60,
    "passes": 60,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-23T08:57:54.508Z",
    "end": "2022-02-23T08:57:55.907Z",
    "duration": 1399,
    "testsRegistered": 60,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "68a9e90b-2456-4be5-b751-c3d8f8da6246",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5b29f5e8-f210-4bd1-b3d4-c03c391e782c",
          "title": "POST /comments/new-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/addComment.spec.js",
          "file": "/tests/commentRoutes/addComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /comments/new-comment\"",
              "fullTitle": "POST /comments/new-comment \"before all\" hook in \"POST /comments/new-comment\"",
              "timedOut": false,
              "duration": 123,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "74b5bb86-8d21-4e67-9c9a-1bddefec2d79",
              "parentUUID": "5b29f5e8-f210-4bd1-b3d4-c03c391e782c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"POST /comments/new-comment\"",
              "fullTitle": "POST /comments/new-comment \"after all\" hook in \"POST /comments/new-comment\"",
              "timedOut": false,
              "duration": 46,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "694a9f12-ff17-4ee9-991d-ab3055dba1dd",
              "parentUUID": "5b29f5e8-f210-4bd1-b3d4-c03c391e782c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "820aa0fd-a086-4a47-9a50-6e21ba8d041a",
              "title": "POST /comments/new-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/addComment.spec.js",
              "file": "/tests/commentRoutes/addComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should POST (add) a new comment on the post with the givin id's",
                  "fullTitle": "POST /comments/new-comment POST /comments/new-comment should POST (add) a new comment on the post with the givin id's",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.post(\"/comments/new-comment\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome here\",\n});\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\", 1);\nres.body.should.have.property(\"userId\", secondUser.id);\nres.body.should.have.property(\"postId\", firstPost.id);\nres.body.should.have.property(\"body\", \"Hi, your welcome here\");",
                  "err": {},
                  "uuid": "1d286d0d-79a5-4f69-96fc-2883feb1a2c2",
                  "parentUUID": "820aa0fd-a086-4a47-9a50-6e21ba8d041a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d286d0d-79a5-4f69-96fc-2883feb1a2c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "f0530ef3-acb5-4be8-b39b-8de7ef84562d",
              "title": "POST /comments/new-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/addComment.spec.js",
              "file": "/tests/commentRoutes/addComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a 404 code if the new comment data have missing fields",
                  "fullTitle": "POST /comments/new-comment POST /comments/new-comment should return a 404 code if the new comment data have missing fields",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.post(\"/comments/new-comment\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "8555e5dc-4fc1-4947-b378-1ec837dc42e0",
                  "parentUUID": "f0530ef3-acb5-4be8-b39b-8de7ef84562d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8555e5dc-4fc1-4947-b378-1ec837dc42e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "4c05a796-fe72-4926-bdcf-edeb921c54bd",
          "title": "GET /comments",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allComments.spec.js",
          "file": "/tests/commentRoutes/allComments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /comments\"",
              "fullTitle": "GET /comments \"before all\" hook in \"GET /comments\"",
              "timedOut": false,
              "duration": 20,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hope you enjoy with us\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "6b3c07b1-8457-4cc3-b651-8bab83f2f7f5",
              "parentUUID": "4c05a796-fe72-4926-bdcf-edeb921c54bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /comments\"",
              "fullTitle": "GET /comments \"after all\" hook in \"GET /comments\"",
              "timedOut": false,
              "duration": 38,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "5293b1b7-3c8c-467d-b2ef-cb593e4037e0",
              "parentUUID": "4c05a796-fe72-4926-bdcf-edeb921c54bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "dbe93a36-d5d8-4a77-af1f-4086803cfeb6",
              "title": "GET /comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allComments.spec.js",
              "file": "/tests/commentRoutes/allComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET all the comments in the database",
                  "fullTitle": "GET /comments GET /comments should GET all the comments in the database",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments\");\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);",
                  "err": {},
                  "uuid": "7a58e88d-33e6-4dba-9211-e2657778f8f1",
                  "parentUUID": "dbe93a36-d5d8-4a77-af1f-4086803cfeb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a58e88d-33e6-4dba-9211-e2657778f8f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "d13f1485-9b1e-444e-be4c-aa31ab8b41c0",
              "title": "GET /comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allComments.spec.js",
              "file": "/tests/commentRoutes/allComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if no comments in the database",
                  "fullTitle": "GET /comments GET /comments should return 404 code if no comments in the database",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.get(\"/comments\");\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"No Comments Found\");",
                  "err": {},
                  "uuid": "db30e325-11f0-42a7-a5a4-888f95276f96",
                  "parentUUID": "d13f1485-9b1e-444e-be4c-aa31ab8b41c0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db30e325-11f0-42a7-a5a4-888f95276f96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "8999a909-5c02-489a-93a5-584e92d80547",
          "title": "GET /comments/all-user-comments",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allUserComments.spec.js",
          "file": "/tests/commentRoutes/allUserComments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /comments/all-user-comments\"",
              "fullTitle": "GET /comments/all-user-comments \"before all\" hook in \"GET /comments/all-user-comments\"",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hope you enjoy with us\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "cbd79211-ea3b-4dd4-b22c-55ca65b0d5d9",
              "parentUUID": "8999a909-5c02-489a-93a5-584e92d80547",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /comments/all-user-comments\"",
              "fullTitle": "GET /comments/all-user-comments \"after all\" hook in \"GET /comments/all-user-comments\"",
              "timedOut": false,
              "duration": 37,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "e9b96c65-62bf-428a-bc58-e60877a957be",
              "parentUUID": "8999a909-5c02-489a-93a5-584e92d80547",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5e4bc466-0816-4397-9f90-54136486ba55",
              "title": "GET /comments/all-user-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allUserComments.spec.js",
              "file": "/tests/commentRoutes/allUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET the all comments for a user with the givin userId from the database",
                  "fullTitle": "GET /comments/all-user-comments GET /comments/all-user-comments should GET the all comments for a user with the givin userId from the database",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/all-user-comments\").send({\n  userId: secondUser.id,\n});\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);\nres.body[1].should.have.property(\"id\", firstComment.id);\nres.body[1].should.have.property(\"userId\", secondUser.id);\nres.body[1].should.have.property(\"postId\", firstPost.id);\nres.body[1].should.have.property(\"body\", firstComment.body);",
                  "err": {},
                  "uuid": "4e10e416-9694-4768-830a-151c545ab701",
                  "parentUUID": "5e4bc466-0816-4397-9f90-54136486ba55",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e10e416-9694-4768-830a-151c545ab701"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "780779f2-ef90-47ef-92a4-5caa2cec3456",
              "title": "GET /comments/all-user-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/allUserComments.spec.js",
              "file": "/tests/commentRoutes/allUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if no user with the givin id in the database",
                  "fullTitle": "GET /comments/all-user-comments GET /comments/all-user-comments should return 404 code if no user with the givin id in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/all-user-comments\").send({\n  userId: 3,\n});\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "4ae4f884-ac74-48d6-a54b-0d3547651cbc",
                  "parentUUID": "780779f2-ef90-47ef-92a4-5caa2cec3456",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no comments for the user in the database",
                  "fullTitle": "GET /comments/all-user-comments GET /comments/all-user-comments should return 404 code if no comments for the user in the database",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.get(\"/comments/all-user-comments\").send({\n  userId: secondUser.id,\n});\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"The user dont have comments\");",
                  "err": {},
                  "uuid": "ca76995d-9108-4c2d-b921-6377a3ed8ac8",
                  "parentUUID": "780779f2-ef90-47ef-92a4-5caa2cec3456",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ae4f884-ac74-48d6-a54b-0d3547651cbc",
                "ca76995d-9108-4c2d-b921-6377a3ed8ac8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "17e73d06-2dd0-4902-ae49-a5cbe7f56cec",
          "title": "DELETE /comments/delete-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
          "file": "/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"before all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "d7072990-0d21-41ac-94db-11cc1c9e9325",
              "parentUUID": "17e73d06-2dd0-4902-ae49-a5cbe7f56cec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"after all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 38,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "bd27e628-b324-40eb-ba77-63b1f452c12e",
              "parentUUID": "17e73d06-2dd0-4902-ae49-a5cbe7f56cec",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "912f2437-5524-438b-8577-ad6456974d58",
              "title": "DELETE /comments/delete-all-comments-from-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a comment with the givin id",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments-from-post should DELETE a comment with the givin id",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments-from-post\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(200);\nres.body.message.should.equal(\"All comments successfully deleted\")",
                  "err": {},
                  "uuid": "f9cee8ec-73df-425c-9521-f07077eeebda",
                  "parentUUID": "912f2437-5524-438b-8577-ad6456974d58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9cee8ec-73df-425c-9521-f07077eeebda"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "f3754588-96d9-4bab-8fb7-b2232831baa5",
              "title": "DELETE /comments/delete-all-comments-from-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserCommentfromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the deleted comment has missing fields",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments-from-post should return 404 code if the deleted comment has missing fields",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments-from-post\").send({\n  userId: secondUser.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");\nconst allPostComments = await commentModel.findAll({\n  where: {\n    postId: firstPost.id\n  }\n})\nallPostComments.length.should.equal(0);",
                  "err": {},
                  "uuid": "9ab50115-2859-457b-9f93-bd03effd519e",
                  "parentUUID": "f3754588-96d9-4bab-8fb7-b2232831baa5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the comment not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments-from-post should return 404 code if the comment not found in database",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.delete(\"/comments/delete-all-comments-from-post\").send({\n  userId: secondUser.id,\n  postId: firstPost.id\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"The user dont have comments on the specified post\");",
                  "err": {},
                  "uuid": "3c0f20ac-8309-4bbf-8717-ec70fa5e6891",
                  "parentUUID": "f3754588-96d9-4bab-8fb7-b2232831baa5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ab50115-2859-457b-9f93-bd03effd519e",
                "3c0f20ac-8309-4bbf-8717-ec70fa5e6891"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "a4946bec-3705-4003-a0db-618b9ff8bdf2",
          "title": "DELETE /comments/delete-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserComments.spec.js",
          "file": "/tests/commentRoutes/deleteAllUserComments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"before all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "9afe58bf-a499-4a82-bfcc-f877716d2dd3",
              "parentUUID": "a4946bec-3705-4003-a0db-618b9ff8bdf2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"after all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 37,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "cfc3a5c3-da7a-430f-b4cb-5c33fa1fd6e0",
              "parentUUID": "a4946bec-3705-4003-a0db-618b9ff8bdf2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6603e379-b778-4d63-aac1-0cc49b2957f4",
              "title": "DELETE /comments/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserComments.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a comments with the givin id",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments should DELETE a comments with the givin id",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments\").send({\n  userId: secondUser.id,\n});\nres.should.have.status(200);\nres.body.message.should.equal(\"All comments successfully deleted\")",
                  "err": {},
                  "uuid": "2d5cd6f9-d430-443b-943b-3b82ef3b1eb1",
                  "parentUUID": "6603e379-b778-4d63-aac1-0cc49b2957f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d5cd6f9-d430-443b-943b-3b82ef3b1eb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "17fdd502-ea58-4fc0-99aa-54ee8c3bdcbf",
              "title": "DELETE /comments/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteAllUserComments.spec.js",
              "file": "/tests/commentRoutes/deleteAllUserComments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the user not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments should return 404 code if the user not found in database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-all-comments\").send({\n  userId: 3,\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "422e42b3-d703-4910-83b4-43c16d14bd18",
                  "parentUUID": "17fdd502-ea58-4fc0-99aa-54ee8c3bdcbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the comments not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-all-comments should return 404 code if the comments not found in database",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.delete(\"/comments/delete-all-comments\").send({\n  userId: secondUser.id,\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"The user dont have comments\");",
                  "err": {},
                  "uuid": "87c88fcc-46b7-478f-8d0f-ea30fadb9034",
                  "parentUUID": "17fdd502-ea58-4fc0-99aa-54ee8c3bdcbf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "422e42b3-d703-4910-83b4-43c16d14bd18",
                "87c88fcc-46b7-478f-8d0f-ea30fadb9034"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "4ea96331-45fb-4395-87ff-9b5688d10690",
          "title": "DELETE /comments/delete-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteComment.spec.js",
          "file": "/tests/commentRoutes/deleteComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"before all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "dacd1fab-d577-4703-9b92-d9ba8ca4f325",
              "parentUUID": "4ea96331-45fb-4395-87ff-9b5688d10690",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /comments/delete-comment\"",
              "fullTitle": "DELETE /comments/delete-comment \"after all\" hook in \"DELETE /comments/delete-comment\"",
              "timedOut": false,
              "duration": 39,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "bb4e1b0b-caa1-4fa6-82c6-c97b740a7d4e",
              "parentUUID": "4ea96331-45fb-4395-87ff-9b5688d10690",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ce6a8f06-3eee-43db-9c34-bc468d426675",
              "title": "DELETE /comments/delete-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteComment.spec.js",
              "file": "/tests/commentRoutes/deleteComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a comment with the givin id",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-comment should DELETE a comment with the givin id",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-comment\").send({\n  id: secondComment.id,\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(200);\nres.body.message.should.equal(\"Comment successfully deleted\")",
                  "err": {},
                  "uuid": "1698398d-2ff2-47cd-a2eb-7ebf19af3f18",
                  "parentUUID": "ce6a8f06-3eee-43db-9c34-bc468d426675",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1698398d-2ff2-47cd-a2eb-7ebf19af3f18"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "bac30d97-53ef-4e83-9580-17a13fe53698",
              "title": "DELETE /comments/delete-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/deleteComment.spec.js",
              "file": "/tests/commentRoutes/deleteComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the deleted comment has missing fields",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-comment should return 404 code if the deleted comment has missing fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-comment\").send({\n  id: secondComment.id,\n  userId: secondUser.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "67c7488b-3a70-43ef-91d2-d70895ba32bd",
                  "parentUUID": "bac30d97-53ef-4e83-9580-17a13fe53698",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the comment not found in database",
                  "fullTitle": "DELETE /comments/delete-comment DELETE /comments/delete-comment should return 404 code if the comment not found in database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete(\"/comments/delete-comment\").send({\n  id: 3,\n  userId: secondUser.id,\n  postId: firstPost.id\n});\n  \nres.should.have.status(404);\nres.body.message.should.equal(\"Comment Not Found\");",
                  "err": {},
                  "uuid": "8f413129-bd25-4928-ba55-3e9bc2314ac8",
                  "parentUUID": "bac30d97-53ef-4e83-9580-17a13fe53698",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67c7488b-3a70-43ef-91d2-d70895ba32bd",
                "8f413129-bd25-4928-ba55-3e9bc2314ac8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "5bb1fd45-fa9d-4e33-8905-6ca5e3a51289",
          "title": "GET /comments/user-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/oneComment.spec.js",
          "file": "/tests/commentRoutes/oneComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /comments/user-comment\"",
              "fullTitle": "GET /comments/user-comment \"before all\" hook in \"GET /comments/user-comment\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hope you enjoy with us\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "ccfaf552-a2e2-4cda-b32e-8cd6feb22f8a",
              "parentUUID": "5bb1fd45-fa9d-4e33-8905-6ca5e3a51289",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /comments/user-comment\"",
              "fullTitle": "GET /comments/user-comment \"after all\" hook in \"GET /comments/user-comment\"",
              "timedOut": false,
              "duration": 40,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "e811c204-d8fb-4b5b-a487-e851bedbe5a7",
              "parentUUID": "5bb1fd45-fa9d-4e33-8905-6ca5e3a51289",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4d43f288-c8a8-475f-931d-6bdffedae67a",
              "title": "GET /comments/user-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/oneComment.spec.js",
              "file": "/tests/commentRoutes/oneComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET the comments with specific  id, userId and postId from the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should GET the comments with specific  id, userId and postId from the database",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n    id: firstComment.id,\n    userId: secondUser.id,\n    postId: firstPost.id\n});\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\",firstComment.id)\nres.body.should.have.property(\"userId\",secondUser.id)\nres.body.should.have.property(\"postId\",firstPost.id)\nres.body.should.have.property(\"body\",firstComment.body)",
                  "err": {},
                  "uuid": "3838e9b4-c0e4-4c08-a14b-87a46ce3c7b4",
                  "parentUUID": "4d43f288-c8a8-475f-931d-6bdffedae67a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3838e9b4-c0e4-4c08-a14b-87a46ce3c7b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "8915516d-21c4-4723-a003-63f8f0ae7990",
              "title": "GET /comments/user-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/oneComment.spec.js",
              "file": "/tests/commentRoutes/oneComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if comment data has some missing fields",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if comment data has some missing fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n      id: firstComment.id,\n      userId: secondUser.id,\n  });\n  \n  res.should.have.status(404);\n  res.body.should.be.a(\"object\");\n  res.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "2e9b3062-7f79-43b7-b8e9-bac054ec7f61",
                  "parentUUID": "8915516d-21c4-4723-a003-63f8f0ae7990",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no user with the givin id in the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if no user with the givin id in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n    id: firstComment.id,\n    userId: 3,\n    postId: firstPost.id\n});\n  \nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "3cbea41e-92ea-4058-8253-cfd2a60c3f9f",
                  "parentUUID": "8915516d-21c4-4723-a003-63f8f0ae7990",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no post with the givin id in the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if no post with the givin id in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/comments/user-comment\").send({\n       id: firstComment.id,\n       userId: secondUser.id,\n       postId: 3\n   });;\n  \n   res.should.have.status(404);\n   res.body.should.be.a(\"object\");\n   res.body.message.should.equal(\"Post Not Found Or Was Deleted\");",
                  "err": {},
                  "uuid": "8c0430ad-b22b-46e9-b2ea-9976f56639e4",
                  "parentUUID": "8915516d-21c4-4723-a003-63f8f0ae7990",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if no comment for the user on the post in the database",
                  "fullTitle": "GET /comments/user-comment GET /comments/user-comment should return 404 code if no comment for the user on the post in the database",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester.get(\"/comments/user-comment\").send({\n  id: firstComment.id,\n  userId: secondUser.id,\n  postId: firstPost.id\n    });\nres.should.have.status(404);\nres.body.should.be.a(\"object\");\nres.body.message.should.equal(\"Comment Not Found\");",
                  "err": {},
                  "uuid": "a7503114-c25d-480d-9380-0194b2b05912",
                  "parentUUID": "8915516d-21c4-4723-a003-63f8f0ae7990",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e9b3062-7f79-43b7-b8e9-bac054ec7f61",
                "3cbea41e-92ea-4058-8253-cfd2a60c3f9f",
                "8c0430ad-b22b-46e9-b2ea-9976f56639e4",
                "a7503114-c25d-480d-9380-0194b2b05912"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 24,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "dd7ab264-2a69-4a10-bfbb-3220c9c15ca4",
          "title": "PUT /comments/update-comment",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/updateComment.spec.js",
          "file": "/tests/commentRoutes/updateComment.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"PUT /comments/update-comment\"",
              "fullTitle": "PUT /comments/update-comment \"before all\" hook in \"PUT /comments/update-comment\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: secondUser.id,\n  body: \"Hallo all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "dd2a9e90-4b83-411d-916a-5ee5b2c16384",
              "parentUUID": "dd7ab264-2a69-4a10-bfbb-3220c9c15ca4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"PUT /comments/update-comment\"",
              "fullTitle": "PUT /comments/update-comment \"after all\" hook in \"PUT /comments/update-comment\"",
              "timedOut": false,
              "duration": 40,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "6a047204-3098-4857-9751-26be81e46c0c",
              "parentUUID": "dd7ab264-2a69-4a10-bfbb-3220c9c15ca4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5ad3e0a9-a869-4432-9612-0cf31dd42263",
              "title": "PUT /comments/update-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/updateComment.spec.js",
              "file": "/tests/commentRoutes/updateComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should PUT (update) a comment on the post with the givin id",
                  "fullTitle": "PUT /comments/update-comment PUT /comments/update-comment should PUT (update) a comment on the post with the givin id",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/comments/update-comment\").send({\n  id: firstComment.id,\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi, your welcome here\",\n});",
                  "err": {},
                  "uuid": "7356d820-3be9-4650-a754-ee6a18e1b64c",
                  "parentUUID": "5ad3e0a9-a869-4432-9612-0cf31dd42263",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7356d820-3be9-4650-a754-ee6a18e1b64c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "20360bc7-f23c-4a9c-aa1a-6120c446b539",
              "title": "PUT /comments/update-comment",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/commentRoutes/updateComment.spec.js",
              "file": "/tests/commentRoutes/updateComment.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a 404 code if the updated comment data have missing fields",
                  "fullTitle": "PUT /comments/update-comment PUT /comments/update-comment should return a 404 code if the updated comment data have missing fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/comments/update-comment\").send({\n  userId: secondUser.id,\n  postId: firstPost.id,\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "cd6fd167-9618-4f08-aa3b-9254472df085",
                  "parentUUID": "20360bc7-f23c-4a9c-aa1a-6120c446b539",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a 404 code if no comment with the givin id",
                  "fullTitle": "PUT /comments/update-comment PUT /comments/update-comment should return a 404 code if no comment with the givin id",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/comments/update-comment\").send({\n  id: 2,\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"hi , how are you\",\n});\nres.should.have.status(404);\nres.body.message.should.equal(\"Comment Not Found\");",
                  "err": {},
                  "uuid": "566ab34b-3df1-4c55-9cbf-a479c3450274",
                  "parentUUID": "20360bc7-f23c-4a9c-aa1a-6120c446b539",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd6fd167-9618-4f08-aa3b-9254472df085",
                "566ab34b-3df1-4c55-9cbf-a479c3450274"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "8372797f-124a-4440-a064-02e8d9939743",
          "title": "POST /users/new-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/addPost.spec.js",
          "file": "/tests/postRoutes/addPost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users/new-post\"",
              "fullTitle": "POST /users/new-post \"before all\" hook in \"POST /users/new-post\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "62311157-70a5-4844-8f64-e1db5d756441",
              "parentUUID": "8372797f-124a-4440-a064-02e8d9939743",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"POST /users/new-post\"",
              "fullTitle": "POST /users/new-post \"after all\" hook in \"POST /users/new-post\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "479430ad-b4aa-4f61-88ea-d760dc854b6c",
              "parentUUID": "8372797f-124a-4440-a064-02e8d9939743",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "daa43019-bbfa-425b-8391-1af9a22f2435",
              "title": "POST /posts/new-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/addPost.spec.js",
              "file": "/tests/postRoutes/addPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should POST (add) a new post in database",
                  "fullTitle": "POST /users/new-post POST /posts/new-post should POST (add) a new post in database",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .post(\"/posts/new-post\")\n  .send({ userId: user.id, body: \"Hi\" });\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\", 1);\nres.body.should.have.property(\"userId\", user.id);\nres.body.should.have.property(\"body\", \"Hi\");",
                  "err": {},
                  "uuid": "25dcadd8-70f5-4e03-97a4-fd2b71e86536",
                  "parentUUID": "daa43019-bbfa-425b-8391-1af9a22f2435",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25dcadd8-70f5-4e03-97a4-fd2b71e86536"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "9b889be3-d2f3-4579-b00e-05502fd86e63",
              "title": "POST /posts/new-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/addPost.spec.js",
              "file": "/tests/postRoutes/addPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if new post data has some missing fields (body)",
                  "fullTitle": "POST /users/new-post POST /posts/new-post should return 404 code if new post data has some missing fields (body)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .post(\"/posts/new-post\")\n  .send({ userId: user.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "cd2a5716-4136-4a1d-af99-f6b5f67890db",
                  "parentUUID": "9b889be3-d2f3-4579-b00e-05502fd86e63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user id is not found in the database",
                  "fullTitle": "POST /users/new-post POST /posts/new-post should return 404 code if the user id is not found in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .post(\"/posts/new-post\")\n  .send({ userId: 2, body: \"hallo\" });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "466b2565-7aa6-4a06-b264-712210a1744d",
                  "parentUUID": "9b889be3-d2f3-4579-b00e-05502fd86e63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd2a5716-4136-4a1d-af99-f6b5f67890db",
                "466b2565-7aa6-4a06-b264-712210a1744d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "eee0eafe-6af3-4dc9-8d5a-99eccb7ce7f2",
          "title": "GET /users",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allPosts.spec.js",
          "file": "/tests/postRoutes/allPosts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"before all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 9,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n    userId: user.id,\n    body: 'Hi, Im new here'\n});\nsecondPost = await postModel.create({\n    userId: user.id,\n    body: 'Hallo all'\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "36162178-d3f8-431d-a34d-f6bc0141e7e8",
              "parentUUID": "eee0eafe-6af3-4dc9-8d5a-99eccb7ce7f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"after all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "fc54306e-de2d-4062-ac3e-885ff5263440",
              "parentUUID": "eee0eafe-6af3-4dc9-8d5a-99eccb7ce7f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "cb948d8d-1cd9-40ba-9ccd-ae107d78f17f",
              "title": "GET /posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allPosts.spec.js",
              "file": "/tests/postRoutes/allPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET all posts in database",
                  "fullTitle": "GET /users GET /posts should GET all posts in database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/posts');\nres.should.have.status(200);\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);\nres.body[1].should.be.a(\"object\");\nres.body[1].userId.should.equal(user.id);\nres.body[1].id.should.equal(1);\nres.body[1].body.should.equal(firstPost.body);",
                  "err": {},
                  "uuid": "0b39c0fe-75aa-464f-925b-b9f8f8a49f9a",
                  "parentUUID": "cb948d8d-1cd9-40ba-9ccd-ae107d78f17f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b39c0fe-75aa-464f-925b-b9f8f8a49f9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "633fe21c-40bb-4e71-a285-85d934956f62",
              "title": "GET /posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allPosts.spec.js",
              "file": "/tests/postRoutes/allPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET posts in database (wrong url)",
                  "fullTitle": "GET /users GET /posts should NOT GET posts in database (wrong url)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/post');\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "c87604e6-ebdf-45c1-bbfa-1cbeb68b0fff",
                  "parentUUID": "633fe21c-40bb-4e71-a285-85d934956f62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c87604e6-ebdf-45c1-bbfa-1cbeb68b0fff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "2f77fdd6-c2f1-41cf-a567-12af7aa7aca4",
          "title": "GET /users/all-user-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allUserPosts.spec.js",
          "file": "/tests/postRoutes/allUserPosts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users/all-user-post\"",
              "fullTitle": "GET /users/all-user-post \"before all\" hook in \"GET /users/all-user-post\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "871880f9-7fe6-446c-a5c4-6f47c25cc185",
              "parentUUID": "2f77fdd6-c2f1-41cf-a567-12af7aa7aca4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users/all-user-post\"",
              "fullTitle": "GET /users/all-user-post \"after all\" hook in \"GET /users/all-user-post\"",
              "timedOut": false,
              "duration": 26,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "92358ad5-796f-4b51-a505-29b7350ff1df",
              "parentUUID": "2f77fdd6-c2f1-41cf-a567-12af7aa7aca4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f1a8c1f8-8406-4ac1-ae16-c77bd881b669",
              "title": "GET /posts/all-user-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allUserPosts.spec.js",
              "file": "/tests/postRoutes/allUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET a post with the id (1) in database",
                  "fullTitle": "GET /users/all-user-post GET /posts/all-user-post should GET a post with the id (1) in database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .get(\"/posts/all-user-post\")\n  .send({ userId: 1 });\nres.should.have.status(200);\nres.body.should.be.a(\"array\");\nres.body.length.should.equal(2);\nres.body[1].userId.should.equal(user.id);\nres.body[1].id.should.equal(1);\nres.body[1].body.should.equal(firstPost.body);",
                  "err": {},
                  "uuid": "49e31afe-f8a4-46cd-a01c-99bce0ca8db1",
                  "parentUUID": "f1a8c1f8-8406-4ac1-ae16-c77bd881b669",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49e31afe-f8a4-46cd-a01c-99bce0ca8db1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "53d326fb-7361-48e3-811d-bed7042db79e",
              "title": "GET /posts/all-user-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/allUserPosts.spec.js",
              "file": "/tests/postRoutes/allUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code with user id is not found in the database",
                  "fullTitle": "GET /users/all-user-post GET /posts/all-user-post should return 404 code with user id is not found in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .get(\"/posts/all-user-post\")\n  .send({ userId: 2 });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "db3667a0-ff86-4d51-a28e-3db6995af610",
                  "parentUUID": "53d326fb-7361-48e3-811d-bed7042db79e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user do not have posts",
                  "fullTitle": "GET /users/all-user-post GET /posts/all-user-post should return 404 code if the user do not have posts",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(postModel);\n\n      const res = await requester\n.get(\"/posts/all-user-post\")\n.send({ id: 3, userId: 1 });\n\n      res.should.have.status(404);\n      res.body.message.should.equal(\"The user dont have posts\");",
                  "err": {},
                  "uuid": "9b323b3b-b11f-42f5-a4d7-8c6fa54d61cd",
                  "parentUUID": "53d326fb-7361-48e3-811d-bed7042db79e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db3667a0-ff86-4d51-a28e-3db6995af610",
                "9b323b3b-b11f-42f5-a4d7-8c6fa54d61cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "ad676d03-f323-4bae-b277-f591af393223",
          "title": "DELETE /posts/delete-all-posts",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteCommentsFromPost.spec.js",
          "file": "/tests/postRoutes/deleteCommentsFromPost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Odai\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: firstUser.id,\n  body: \"Hi all\",\n});\nfirstComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"Hi\",\n});\nsecondComment = await commentModel.create({\n  userId: secondUser.id,\n  postId: firstPost.id,\n  body: \"How are you?\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "6877b710-f23e-443a-9e07-266adbbcc647",
              "parentUUID": "ad676d03-f323-4bae-b277-f591af393223",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 57,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nawait truncate(commentModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "5ea54cf9-c60c-407e-9331-535f30387ab0",
              "parentUUID": "ad676d03-f323-4bae-b277-f591af393223",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "183e6c9b-30be-4661-91cc-3d486fef56ff",
              "title": "DELETE /posts/post/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "file": "/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE all the comments on the post of id (1)",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/post/delete-all-comments should DELETE all the comments on the post of id (1)",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .delete(\"/posts/post/delete-all-comments\")\n  .send({ postId: firstPost.id });\nres.should.have.status(200);\nres.body.message.should.equal(\n  \"All comments on the post are successfully deleted\"\n);",
                  "err": {},
                  "uuid": "f105c74d-e179-4634-9ade-9192c421ac44",
                  "parentUUID": "183e6c9b-30be-4661-91cc-3d486fef56ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f105c74d-e179-4634-9ade-9192c421ac44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "2d780303-e16a-4a02-8e96-b9c418467f07",
              "title": "DELETE /posts/post/delete-all-comments",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "file": "/tests/postRoutes/deleteCommentsFromPost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the user do not have the post with id (2)",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/post/delete-all-comments should return 404 code if the user do not have the post with id (2)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/post/delete-all-comments\")\n        .send({ postId: 2 });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "dd1b3099-c4d4-48e2-8411-f579fdb0a90d",
                  "parentUUID": "2d780303-e16a-4a02-8e96-b9c418467f07",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if there is no comments on the post",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/post/delete-all-comments should return 404 code if there is no comments on the post",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(commentModel);\nconst res = await requester\n  .delete(\"/posts/post/delete-all-comments\")\n  .send({ postId: firstPost.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"No comments found on this post\");",
                  "err": {},
                  "uuid": "f16cce93-8b83-4279-b198-961c937fd53e",
                  "parentUUID": "2d780303-e16a-4a02-8e96-b9c418467f07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd1b3099-c4d4-48e2-8411-f579fdb0a90d",
                "f16cce93-8b83-4279-b198-961c937fd53e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "91caeee4-1dc4-499d-a3a8-0765e15953bf",
          "title": "DELETE /posts/delete-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deletePost.spec.js",
          "file": "/tests/postRoutes/deletePost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /posts/delete-post\"",
              "fullTitle": "DELETE /posts/delete-post \"before all\" hook in \"DELETE /posts/delete-post\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi all\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo...\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "9c64057f-f99a-44d4-9147-a4fe90764633",
              "parentUUID": "91caeee4-1dc4-499d-a3a8-0765e15953bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /posts/delete-post\"",
              "fullTitle": "DELETE /posts/delete-post \"after all\" hook in \"DELETE /posts/delete-post\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "87c278b3-a87a-4c45-bab4-1a36c547a8d0",
              "parentUUID": "91caeee4-1dc4-499d-a3a8-0765e15953bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0dc425ed-482c-41a7-8161-f261e61b07fa",
              "title": "DELETE /posts/delete-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deletePost.spec.js",
              "file": "/tests/postRoutes/deletePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a post for the id (2) and userId (1)",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should DELETE a post for the id (2) and userId (1)",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n.delete(\"/posts/delete-post\")\n.send({ id: secondPost.id, userId: user.id });\n\n      res.should.have.status(200);\n      res.body.message.should.equal(\"Post successfully deleted\");",
                  "err": {},
                  "uuid": "179fee9c-ea57-441a-9856-4c8d1be3fe16",
                  "parentUUID": "0dc425ed-482c-41a7-8161-f261e61b07fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "179fee9c-ea57-441a-9856-4c8d1be3fe16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "88648cb1-2751-4d36-be69-69e9ee960c91",
              "title": "DELETE /posts/delete-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deletePost.spec.js",
              "file": "/tests/postRoutes/deletePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the post is not found in the database",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should return 404 code if the post is not found in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/delete-post\")\n        .send({ id: 3, userId: user.id });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "01e99fa3-8f20-4393-9388-48610ab1455f",
                  "parentUUID": "88648cb1-2751-4d36-be69-69e9ee960c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user is not found in the database",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should return 404 code if the user is not found in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/delete-post\")\n        .send({ id: secondPost.id, userId: 2 });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "85022cea-af9f-4f9f-8749-efddf1ea4827",
                  "parentUUID": "88648cb1-2751-4d36-be69-69e9ee960c91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if post data that will be deleted is missing some fields",
                  "fullTitle": "DELETE /posts/delete-post DELETE /posts/delete-post should return 404 code if post data that will be deleted is missing some fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n        .delete(\"/posts/delete-post\")\n        .send({ id: secondPost.id });\n      res.should.have.status(404);\n      res.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "98a4d3f9-2f33-432e-a9e5-4cf885b910ad",
                  "parentUUID": "88648cb1-2751-4d36-be69-69e9ee960c91",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01e99fa3-8f20-4393-9388-48610ab1455f",
                "85022cea-af9f-4f9f-8749-efddf1ea4827",
                "98a4d3f9-2f33-432e-a9e5-4cf885b910ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "34466952-edb0-40fe-a782-7da37d483871",
          "title": "DELETE /posts/delete-all-posts",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteUserPosts.spec.js",
          "file": "/tests/postRoutes/deleteUserPosts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"before all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 9,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi all\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo...\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "4f9db811-cd26-406f-bc21-61a0e81a3600",
              "parentUUID": "34466952-edb0-40fe-a782-7da37d483871",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "fullTitle": "DELETE /posts/delete-all-posts \"after all\" hook in \"DELETE /posts/delete-all-posts\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "9d9d9746-c517-43b0-870e-dff4c624ea46",
              "parentUUID": "34466952-edb0-40fe-a782-7da37d483871",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5cf3514f-b2b9-4df6-93e6-317bf688a6fc",
              "title": "DELETE /posts/delete-all-posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteUserPosts.spec.js",
              "file": "/tests/postRoutes/deleteUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE all posts for userId (1)",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/delete-all-posts should DELETE all posts for userId (1)",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .delete(\"/posts/delete-all-posts\")\n  .send({ userId: user.id });\nres.should.have.status(200);\nres.body.message.should.equal(\"All posts successfully deleted\");",
                  "err": {},
                  "uuid": "9fd7270b-d9fe-41be-954d-1e4852a40d75",
                  "parentUUID": "5cf3514f-b2b9-4df6-93e6-317bf688a6fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9fd7270b-d9fe-41be-954d-1e4852a40d75"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "85a6154d-2fbb-4759-8453-505562ba4eed",
              "title": "DELETE /posts/delete-all-posts",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/deleteUserPosts.spec.js",
              "file": "/tests/postRoutes/deleteUserPosts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if the user is not found in the database",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/delete-all-posts should return 404 code if the user is not found in the database",
                  "timedOut": false,
                  "duration": 49,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .delete(\"/posts/delete-all-posts\")\n  .send({ userId: 2 });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "bf67d7ba-84e1-4904-b2e9-1a405556c279",
                  "parentUUID": "85a6154d-2fbb-4759-8453-505562ba4eed",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user do not have posts",
                  "fullTitle": "DELETE /posts/delete-all-posts DELETE /posts/delete-all-posts should return 404 code if the user do not have posts",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await truncate(postModel);\nconst res = await requester\n  .delete(\"/posts/delete-all-posts\")\n  .send({ userId: user.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"The User Dont Have Any Post Yet\");",
                  "err": {},
                  "uuid": "7cdd23b4-6570-442a-8364-53a32fd96655",
                  "parentUUID": "85a6154d-2fbb-4759-8453-505562ba4eed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf67d7ba-84e1-4904-b2e9-1a405556c279",
                "7cdd23b4-6570-442a-8364-53a32fd96655"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 69,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "3a0cec69-56b7-4246-a9ec-383b0b1afae0",
          "title": "GET /users/post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/onePost.spec.js",
          "file": "/tests/postRoutes/onePost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users/post\"",
              "fullTitle": "GET /users/post \"before all\" hook in \"GET /users/post\"",
              "timedOut": false,
              "duration": 9,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nfirstPost = await postModel.create({\n  userId: user.id,\n  body: \"Hi, Im new here\",\n});\nsecondPost = await postModel.create({\n  userId: user.id,\n  body: \"Hallo all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "d7d66819-dae1-4d5d-b155-cce827970526",
              "parentUUID": "3a0cec69-56b7-4246-a9ec-383b0b1afae0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users/post\"",
              "fullTitle": "GET /users/post \"after all\" hook in \"GET /users/post\"",
              "timedOut": false,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "d001b571-3c87-4ec4-b925-c00574eca174",
              "parentUUID": "3a0cec69-56b7-4246-a9ec-383b0b1afae0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6a6750bd-b227-42d4-b30e-80c159fa73cb",
              "title": "GET /posts/post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/onePost.spec.js",
              "file": "/tests/postRoutes/onePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET a post with the id (1) in database",
                  "fullTitle": "GET /users/post GET /posts/post should GET a post with the id (1) in database",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ id: 1, userId: 1 });\nres.should.have.status(200);\nres.body.should.be.a(\"object\");\nres.body.userId.should.equal(user.id);\nres.body.id.should.equal(1);\nres.body.body.should.equal(firstPost.body);",
                  "err": {},
                  "uuid": "00e74ac3-643f-415c-9fac-365a07034012",
                  "parentUUID": "6a6750bd-b227-42d4-b30e-80c159fa73cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00e74ac3-643f-415c-9fac-365a07034012"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "36e9dfb6-f543-4f9e-b828-6dc9c6785384",
              "title": "GET /posts/post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/onePost.spec.js",
              "file": "/tests/postRoutes/onePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code with post id is not found in the database",
                  "fullTitle": "GET /users/post GET /posts/post should return 404 code with post id is not found in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ id: 3, userId: 1 });\nres.should.have.status(404);\nres.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "8113f938-90d2-4cc4-bc7d-fc54b734ffa3",
                  "parentUUID": "36e9dfb6-f543-4f9e-b828-6dc9c6785384",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code with user id is not found in the database",
                  "fullTitle": "GET /users/post GET /posts/post should return 404 code with user id is not found in the database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ id: 1, userId: 2 });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "3e33a1f6-da8e-4dcf-8f4f-9a6c4dfe8b0a",
                  "parentUUID": "36e9dfb6-f543-4f9e-b828-6dc9c6785384",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code with user id is not found in the database",
                  "fullTitle": "GET /users/post GET /posts/post should return 404 code with user id is not found in the database",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get(\"/posts/post\").send({ userId: 1 });\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "64c0c126-0e9d-4e91-9898-8d6f9343c624",
                  "parentUUID": "36e9dfb6-f543-4f9e-b828-6dc9c6785384",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8113f938-90d2-4cc4-bc7d-fc54b734ffa3",
                "3e33a1f6-da8e-4dcf-8f4f-9a6c4dfe8b0a",
                "64c0c126-0e9d-4e91-9898-8d6f9343c624"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "9ff64bb5-ddbe-4e87-8f94-98207775281b",
          "title": "PUT /users/update-post",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/updatePost.spec.js",
          "file": "/tests/postRoutes/updatePost.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"PUT /users/update-post\"",
              "fullTitle": "PUT /users/update-post \"before all\" hook in \"PUT /users/update-post\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "user = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\npost = await postModel.create({\n  userId: user.id,\n  body: \"Hi all\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "88f1fdf9-5ff0-4ceb-81df-6f94604ecd69",
              "parentUUID": "9ff64bb5-ddbe-4e87-8f94-98207775281b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"PUT /users/update-post\"",
              "fullTitle": "PUT /users/update-post \"after all\" hook in \"PUT /users/update-post\"",
              "timedOut": false,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nawait truncate(postModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "fc54c4e9-3f15-4183-89d5-3686db727baa",
              "parentUUID": "9ff64bb5-ddbe-4e87-8f94-98207775281b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d334d5d0-a158-40cc-8e78-251a4c2c285c",
              "title": "PUT /posts/update-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/updatePost.spec.js",
              "file": "/tests/postRoutes/updatePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should PUT (update) a post in database",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should PUT (update) a post in database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: 1, userId: user.id, body: \"Hi all,i'm new here\" });\nres.body.should.be.a(\"object\");\nres.body.should.have.property(\"id\", post.id);\nres.body.should.have.property(\"userId\", user.id);\nres.body.should.have.property(\"body\", \"Hi all,i'm new here\");",
                  "err": {},
                  "uuid": "1ec29bf5-13c1-482b-a1b9-1b8c532e6a1a",
                  "parentUUID": "d334d5d0-a158-40cc-8e78-251a4c2c285c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ec29bf5-13c1-482b-a1b9-1b8c532e6a1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "8951c3a3-a2e7-477e-83aa-0fd1047843b1",
              "title": "PUT /posts/update-post",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/postRoutes/updatePost.spec.js",
              "file": "/tests/postRoutes/updatePost.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 code if updated post data has some missing fields (body)",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should return 404 code if updated post data has some missing fields (body)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: post.id, userId: user.id });\nres.should.have.status(404);\nres.body.message.should.equal(\"Something went wrong\");",
                  "err": {},
                  "uuid": "dd643f59-c232-4598-b8df-5127b5546d1d",
                  "parentUUID": "8951c3a3-a2e7-477e-83aa-0fd1047843b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the user id is not found in the database",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should return 404 code if the user id is not found in the database",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: post.id, userId: 2, body: \"Hi all, i'm new here\" });\nres.should.have.status(404);\nres.body.message.should.equal(\"User Not Found\");",
                  "err": {},
                  "uuid": "7f552a8d-800f-4c51-9931-33a4c0c1a93c",
                  "parentUUID": "8951c3a3-a2e7-477e-83aa-0fd1047843b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 code if the post id is not found in the database",
                  "fullTitle": "PUT /users/update-post PUT /posts/update-post should return 404 code if the post id is not found in the database",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester\n  .put(\"/posts/update-post\")\n  .send({ id: 2, userId: user.id, body: \"Hi all,i'm new here\" });\nres.should.have.status(404);\nres.body.message.should.equal(\"Post Not Found\");",
                  "err": {},
                  "uuid": "fae3f698-1bd3-4c81-988c-4499bbea1ded",
                  "parentUUID": "8951c3a3-a2e7-477e-83aa-0fd1047843b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd643f59-c232-4598-b8df-5127b5546d1d",
                "7f552a8d-800f-4c51-9931-33a4c0c1a93c",
                "fae3f698-1bd3-4c81-988c-4499bbea1ded"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "9140e15a-4a6e-495a-8e1b-3ac2d6c3d784",
          "title": "POST /users/new-user",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/addUser.spec.js",
          "file": "/tests/userRoutes/addUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"POST /users/new-user\"",
              "fullTitle": "POST /users/new-user \"before all\" hook in \"POST /users/new-user\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "11122536-910f-468c-9fe7-132c5f2cff6f",
              "parentUUID": "9140e15a-4a6e-495a-8e1b-3ac2d6c3d784",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"POST /users/new-user\"",
              "fullTitle": "POST /users/new-user \"after all\" hook in \"POST /users/new-user\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "95d3c492-d1bf-492c-9e2f-66e1b145ab0a",
              "parentUUID": "9140e15a-4a6e-495a-8e1b-3ac2d6c3d784",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e956f488-e831-4ef0-9083-1238b27a2337",
              "title": "POST /users/new-user",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/addUser.spec.js",
              "file": "/tests/userRoutes/addUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update the first name and last name for a user with the id of (1)",
                  "fullTitle": "POST /users/new-user POST /users/new-user should update the first name and last name for a user with the id of (1)",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newUser = {\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n};\nconst res = await requester.post(\"/users/new-user\").send(newUser);\n_730‍.g.console.log(res.body);\nres.should.have.status(200);\nres.body.should.be.an(\"object\");\nres.body.should.have.property(\"id\", 1);\nres.body.should.have.property(\"firstName\", newUser.firstName);\nres.body.should.have.property(\"lastName\", newUser.lastName);\nres.body.should.have.property(\"email\", newUser.email);\nres.body.should.have.property(\"role\", newUser.role);",
                  "err": {},
                  "uuid": "328b2270-e44e-4982-864a-f2bb4177162b",
                  "parentUUID": "e956f488-e831-4ef0-9083-1238b27a2337",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "328b2270-e44e-4982-864a-f2bb4177162b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "5dccb2ef-457e-4b4f-9b4f-ea57ac513d1f",
              "title": "POST /users/new-user",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/addUser.spec.js",
              "file": "/tests/userRoutes/addUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT ADD any user (missing fields in new user data)",
                  "fullTitle": "POST /users/new-user POST /users/new-user should NOT ADD any user (missing fields in new user data)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newUser = {\n   \n  };\n      const res = await requester.post(\"/users/new-user\").send(newUser);\n      res.should.have.status(404);",
                  "err": {},
                  "uuid": "24e9a71e-be79-42e7-96c9-00f6453f39f2",
                  "parentUUID": "5dccb2ef-457e-4b4f-9b4f-ea57ac513d1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24e9a71e-be79-42e7-96c9-00f6453f39f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "23f06189-f841-46b7-b25f-65a9277a118b",
          "title": "GET /users",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/allUsers.spec.js",
          "file": "/tests/userRoutes/allUsers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"before all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Hasan\",\n  lastName: \"Zeadeh\",\n  email: \"Hasan@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "9d024945-30b5-4ea6-86a7-db623f447cc7",
              "parentUUID": "23f06189-f841-46b7-b25f-65a9277a118b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users\"",
              "fullTitle": "GET /users \"after all\" hook in \"GET /users\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "b92e8c95-6b02-45c2-a47f-ca481e2e707a",
              "parentUUID": "23f06189-f841-46b7-b25f-65a9277a118b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "51bb1ddf-5963-4df1-b647-4e4e9fa39377",
              "title": "GET /users",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/allUsers.spec.js",
              "file": "/tests/userRoutes/allUsers.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should GET all users",
                  "fullTitle": "GET /users GET /users should GET all users",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/users');\nres.should.have.status(200);\nres.body.should.be.an('array');\nres.body.length.should.equal(2);",
                  "err": {},
                  "uuid": "182131ee-a72c-4119-b18e-b24ac5454606",
                  "parentUUID": "51bb1ddf-5963-4df1-b647-4e4e9fa39377",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "182131ee-a72c-4119-b18e-b24ac5454606"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "b70c0451-0ec4-495d-9ee9-0a91cc27afd3",
              "title": "GET /users",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/allUsers.spec.js",
              "file": "/tests/userRoutes/allUsers.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET any user (wrong url)",
                  "fullTitle": "GET /users GET /users should NOT GET any user (wrong url)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/user');\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "4c68a281-6978-4999-b09a-7bc3db5a607a",
                  "parentUUID": "b70c0451-0ec4-495d-9ee9-0a91cc27afd3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c68a281-6978-4999-b09a-7bc3db5a607a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "4fd2c1cb-3708-4071-9b91-43f93eec0916",
          "title": "DELETE /users/delete-user/:id",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/deleteUser.spec.js",
          "file": "/tests/userRoutes/deleteUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE /users/delete-user/:id\"",
              "fullTitle": "DELETE /users/delete-user/:id \"before all\" hook in \"DELETE /users/delete-user/:id\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Hasan\",\n  lastName: \"Zeadeh\",\n  email: \"Hasan@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "8177d648-338f-45e4-acca-8a4b4ce39ab5",
              "parentUUID": "4fd2c1cb-3708-4071-9b91-43f93eec0916",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DELETE /users/delete-user/:id\"",
              "fullTitle": "DELETE /users/delete-user/:id \"after all\" hook in \"DELETE /users/delete-user/:id\"",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "8b526876-76f0-4ec3-bc43-8ed4c12cadb8",
              "parentUUID": "4fd2c1cb-3708-4071-9b91-43f93eec0916",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ffea9f2b-99b4-4b91-92a8-64ffa3a281a5",
              "title": "DELETE /users/delete-user/1",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/deleteUser.spec.js",
              "file": "/tests/userRoutes/deleteUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should DELETE a user with id (1)",
                  "fullTitle": "DELETE /users/delete-user/:id DELETE /users/delete-user/1 should DELETE a user with id (1)",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete('/users/delete-user/1');\nres.should.have.status(200);\nres.body.should.be.an('object');\nres.body.should.have.property(\"message\",\"User has been successfully deleted\")",
                  "err": {},
                  "uuid": "8f190857-7a8c-4fee-ad78-5cdd0c585e11",
                  "parentUUID": "ffea9f2b-99b4-4b91-92a8-64ffa3a281a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f190857-7a8c-4fee-ad78-5cdd0c585e11"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "568bdaeb-9a70-4a95-8ced-6d0e2be638da",
              "title": "DELETE /users",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/deleteUser.spec.js",
              "file": "/tests/userRoutes/deleteUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT DELETE any user (no such user in database)",
                  "fullTitle": "DELETE /users/delete-user/:id DELETE /users should NOT DELETE any user (no such user in database)",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.delete('/users/delete-user/3');;\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "515fecb2-695e-4236-a888-760aae582f11",
                  "parentUUID": "568bdaeb-9a70-4a95-8ced-6d0e2be638da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "515fecb2-695e-4236-a888-760aae582f11"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "7618d2ad-d3d5-424d-a576-8708074e53f8",
          "title": "GET /users/user/:id",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/oneUser.spec.js",
          "file": "/tests/userRoutes/oneUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GET /users/user/:id\"",
              "fullTitle": "GET /users/user/:id \"before all\" hook in \"GET /users/user/:id\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nsecondUser = await userModel.create({\n  firstName: \"Hasan\",\n  lastName: \"Zeadeh\",\n  email: \"Hasan@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "0bb63808-0528-44d8-ae2b-01d7dfb95c51",
              "parentUUID": "7618d2ad-d3d5-424d-a576-8708074e53f8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GET /users/user/:id\"",
              "fullTitle": "GET /users/user/:id \"after all\" hook in \"GET /users/user/:id\"",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "6d0e1026-f099-478e-a947-b05f27fec0be",
              "parentUUID": "7618d2ad-d3d5-424d-a576-8708074e53f8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4a0e7a06-850d-4a8d-bad7-20dfdbe32f3a",
              "title": "GET /users/user/1",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/oneUser.spec.js",
              "file": "/tests/userRoutes/oneUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get a user with the id of (1) from database",
                  "fullTitle": "GET /users/user/:id GET /users/user/1 should get a user with the id of (1) from database",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/users/user/1');\n_2b6‍.g.console.log(res.body)\nres.should.have.status(200);\nres.body.should.be.an('object');\nres.body.should.have.property(\"id\", firstUser.id);    \nres.body.should.have.property('firstName', firstUser.firstName);    \nres.body.should.have.property('lastName', firstUser.lastName);    \nres.body.should.have.property('email', firstUser.email);    \nres.body.should.have.property('role', firstUser.role);",
                  "err": {},
                  "uuid": "40f7de4b-f4dc-444a-9924-33f31c4ed811",
                  "parentUUID": "4a0e7a06-850d-4a8d-bad7-20dfdbe32f3a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40f7de4b-f4dc-444a-9924-33f31c4ed811"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "822fb4ad-0c88-4d8c-967e-274c86b666eb",
              "title": "GET /users/user/3",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/oneUser.spec.js",
              "file": "/tests/userRoutes/oneUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET any user (there no such user in database)",
                  "fullTitle": "GET /users/user/:id GET /users/user/3 should NOT GET any user (there no such user in database)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.get('/users/user/3');\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "5664c0c9-f4fa-4728-9935-178c4f4ce952",
                  "parentUUID": "822fb4ad-0c88-4d8c-967e-274c86b666eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5664c0c9-f4fa-4728-9935-178c4f4ce952"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "0f23d5a5-472c-421e-aae3-80ff5e80b633",
          "title": "PUT /users/update-user/:id",
          "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/updateUser.spec.js",
          "file": "/tests/userRoutes/updateUser.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"PUT /users/update-user/:id\"",
              "fullTitle": "PUT /users/update-user/:id \"before all\" hook in \"PUT /users/update-user/:id\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "firstUser = await userModel.create({\n  firstName: \"Tareq\",\n  lastName: \"Zeadeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n});\nrequester = chai.request(app).keepOpen();\nconsole.log(\"Test Started\");",
              "err": {},
              "uuid": "1c6cb4cd-7417-4d56-9e56-760aab353d08",
              "parentUUID": "0f23d5a5-472c-421e-aae3-80ff5e80b633",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"PUT /users/update-user/:id\"",
              "fullTitle": "PUT /users/update-user/:id \"after all\" hook in \"PUT /users/update-user/:id\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await truncate(userModel);\nrequester.close();\nconsole.log(\"Test Ended\");",
              "err": {},
              "uuid": "5e460a35-af57-4f50-b981-d380a82ffce3",
              "parentUUID": "0f23d5a5-472c-421e-aae3-80ff5e80b633",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "218627e9-315c-4968-a3c4-f6017f20d9d7",
              "title": "PUT /users/update-user/1",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/updateUser.spec.js",
              "file": "/tests/userRoutes/updateUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update the first name and last name for a user with the id of (1)",
                  "fullTitle": "PUT /users/update-user/:id PUT /users/update-user/1 should update the first name and last name for a user with the id of (1)",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const updatedData = {\n  firstName: \"Tariq\",\n  lastName: \"Hawamdeh\",\n  email: \"Tareq@email.com\",\n  role: \"admin\",\n};\nconst res = await requester.put(\"/users/update-user/1\").send(updatedData);\n_b5f‍.g.console.log(res.body);\nres.should.have.status(200);\nres.body.should.be.an(\"object\");\nres.body.should.have.property(\"id\", firstUser.id);\nres.body.should.have.property(\"firstName\", updatedData.firstName);\nres.body.should.have.property(\"lastName\", updatedData.lastName);\nres.body.should.have.property(\"email\", updatedData.email);\nres.body.should.have.property(\"role\", updatedData.role);",
                  "err": {},
                  "uuid": "49ae0854-1d29-4dd2-8910-d17171bd3deb",
                  "parentUUID": "218627e9-315c-4968-a3c4-f6017f20d9d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49ae0854-1d29-4dd2-8910-d17171bd3deb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "efbbc6e7-219a-4d65-896f-a5b78a0e1344",
              "title": "PUT /update-user/2",
              "fullFile": "/home/tareqzeadeh/Desktop/My folders/node-project/node-task/tests/userRoutes/updateUser.spec.js",
              "file": "/tests/userRoutes/updateUser.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT GET any user (there no such user in database)",
                  "fullTitle": "PUT /users/update-user/:id PUT /update-user/2 should NOT GET any user (there no such user in database)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await requester.put(\"/users/update-user/2\");\nres.should.have.status(404);",
                  "err": {},
                  "uuid": "56ce8983-5ac0-4bc6-b25b-2163e676717f",
                  "parentUUID": "efbbc6e7-219a-4d65-896f-a5b78a0e1344",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56ce8983-5ac0-4bc6-b25b-2163e676717f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "6.0.1"
    }
  }
}